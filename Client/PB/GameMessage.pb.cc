// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#include "GameMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class PRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRegisterRequest>
      _instance;
} _PRegisterRequest_default_instance_;
class PRegisterRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRegisterRespond>
      _instance;
} _PRegisterRespond_default_instance_;
class PLoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PLoginRequest>
      _instance;
} _PLoginRequest_default_instance_;
class PLoginRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PLoginRespond>
      _instance;
} _PLoginRespond_default_instance_;
class PMatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PMatchRequest>
      _instance;
} _PMatchRequest_default_instance_;
class PMatchFoundRespond_POtherPlayerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PMatchFoundRespond_POtherPlayerInfo>
      _instance;
} _PMatchFoundRespond_POtherPlayerInfo_default_instance_;
class PMatchFoundRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PMatchFoundRespond>
      _instance;
} _PMatchFoundRespond_default_instance_;
class PPlayerMoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerMoveRequest>
      _instance;
} _PPlayerMoveRequest_default_instance_;
class PPlayerMoveRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerMoveRespond>
      _instance;
} _PPlayerMoveRespond_default_instance_;
class PPlayerTurnRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerTurnRequest>
      _instance;
} _PPlayerTurnRequest_default_instance_;
class PPlayerTurnRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerTurnRespond>
      _instance;
} _PPlayerTurnRespond_default_instance_;
class PPlayerHealthRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerHealthRequest>
      _instance;
} _PPlayerHealthRequest_default_instance_;
class PPlayerHealthRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerHealthRespond>
      _instance;
} _PPlayerHealthRespond_default_instance_;
class PPlayerActionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerActionRequest>
      _instance;
} _PPlayerActionRequest_default_instance_;
class PPlayerActionRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerActionRespond>
      _instance;
} _PPlayerActionRespond_default_instance_;
class PPlayerBuffRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerBuffRequest>
      _instance;
} _PPlayerBuffRequest_default_instance_;
class PPlayerBuffRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerBuffRespond>
      _instance;
} _PPlayerBuffRespond_default_instance_;
class PMonsterKilledRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PMonsterKilledRequest>
      _instance;
} _PMonsterKilledRequest_default_instance_;
class PMonsterKilledRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PMonsterKilledRespond>
      _instance;
} _PMonsterKilledRespond_default_instance_;
class PKilledRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PKilledRequest>
      _instance;
} _PKilledRequest_default_instance_;
class PKilledRespondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PKilledRespond>
      _instance;
} _PKilledRespond_default_instance_;
class PPlayerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PPlayerInfo>
      _instance;
} _PPlayerInfo_default_instance_;
class PClientStep_Vec2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PClientStep_Vec2>
      _instance;
} _PClientStep_Vec2_default_instance_;
class PClientStep_ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PClientStep_Action>
      _instance;
} _PClientStep_Action_default_instance_;
class PClientStepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PClientStep>
      _instance;
} _PClientStep_default_instance_;
class PServerStep_ClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PServerStep_Client>
      _instance;
} _PServerStep_Client_default_instance_;
class PServerStepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PServerStep>
      _instance;
} _PServerStep_default_instance_;
namespace protobuf_GameMessage_2eproto {
void InitDefaultsPRegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PRegisterRequest_default_instance_;
    new (ptr) ::PRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PRegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsPRegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPRegisterRequestImpl);
}

void InitDefaultsPRegisterRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PRegisterRespond_default_instance_;
    new (ptr) ::PRegisterRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PRegisterRespond::InitAsDefaultInstance();
}

void InitDefaultsPRegisterRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPRegisterRespondImpl);
}

void InitDefaultsPLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PLoginRequest_default_instance_;
    new (ptr) ::PLoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PLoginRequest::InitAsDefaultInstance();
}

void InitDefaultsPLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPLoginRequestImpl);
}

void InitDefaultsPLoginRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PLoginRespond_default_instance_;
    new (ptr) ::PLoginRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PLoginRespond::InitAsDefaultInstance();
}

void InitDefaultsPLoginRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPLoginRespondImpl);
}

void InitDefaultsPMatchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PMatchRequest_default_instance_;
    new (ptr) ::PMatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PMatchRequest::InitAsDefaultInstance();
}

void InitDefaultsPMatchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPMatchRequestImpl);
}

void InitDefaultsPMatchFoundRespond_POtherPlayerInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PMatchFoundRespond_POtherPlayerInfo_default_instance_;
    new (ptr) ::PMatchFoundRespond_POtherPlayerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PMatchFoundRespond_POtherPlayerInfo::InitAsDefaultInstance();
}

void InitDefaultsPMatchFoundRespond_POtherPlayerInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPMatchFoundRespond_POtherPlayerInfoImpl);
}

void InitDefaultsPMatchFoundRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond_POtherPlayerInfo();
  {
    void* ptr = &::_PMatchFoundRespond_default_instance_;
    new (ptr) ::PMatchFoundRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PMatchFoundRespond::InitAsDefaultInstance();
}

void InitDefaultsPMatchFoundRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPMatchFoundRespondImpl);
}

void InitDefaultsPPlayerMoveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerMoveRequest_default_instance_;
    new (ptr) ::PPlayerMoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerMoveRequest::InitAsDefaultInstance();
}

void InitDefaultsPPlayerMoveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerMoveRequestImpl);
}

void InitDefaultsPPlayerMoveRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerMoveRespond_default_instance_;
    new (ptr) ::PPlayerMoveRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerMoveRespond::InitAsDefaultInstance();
}

void InitDefaultsPPlayerMoveRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerMoveRespondImpl);
}

void InitDefaultsPPlayerTurnRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerTurnRequest_default_instance_;
    new (ptr) ::PPlayerTurnRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerTurnRequest::InitAsDefaultInstance();
}

void InitDefaultsPPlayerTurnRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerTurnRequestImpl);
}

void InitDefaultsPPlayerTurnRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerTurnRespond_default_instance_;
    new (ptr) ::PPlayerTurnRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerTurnRespond::InitAsDefaultInstance();
}

void InitDefaultsPPlayerTurnRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerTurnRespondImpl);
}

void InitDefaultsPPlayerHealthRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerHealthRequest_default_instance_;
    new (ptr) ::PPlayerHealthRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerHealthRequest::InitAsDefaultInstance();
}

void InitDefaultsPPlayerHealthRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerHealthRequestImpl);
}

void InitDefaultsPPlayerHealthRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerHealthRespond_default_instance_;
    new (ptr) ::PPlayerHealthRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerHealthRespond::InitAsDefaultInstance();
}

void InitDefaultsPPlayerHealthRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerHealthRespondImpl);
}

void InitDefaultsPPlayerActionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerActionRequest_default_instance_;
    new (ptr) ::PPlayerActionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerActionRequest::InitAsDefaultInstance();
}

void InitDefaultsPPlayerActionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerActionRequestImpl);
}

void InitDefaultsPPlayerActionRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerActionRespond_default_instance_;
    new (ptr) ::PPlayerActionRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerActionRespond::InitAsDefaultInstance();
}

void InitDefaultsPPlayerActionRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerActionRespondImpl);
}

void InitDefaultsPPlayerBuffRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerBuffRequest_default_instance_;
    new (ptr) ::PPlayerBuffRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerBuffRequest::InitAsDefaultInstance();
}

void InitDefaultsPPlayerBuffRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerBuffRequestImpl);
}

void InitDefaultsPPlayerBuffRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerBuffRespond_default_instance_;
    new (ptr) ::PPlayerBuffRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerBuffRespond::InitAsDefaultInstance();
}

void InitDefaultsPPlayerBuffRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerBuffRespondImpl);
}

void InitDefaultsPMonsterKilledRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PMonsterKilledRequest_default_instance_;
    new (ptr) ::PMonsterKilledRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PMonsterKilledRequest::InitAsDefaultInstance();
}

void InitDefaultsPMonsterKilledRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPMonsterKilledRequestImpl);
}

void InitDefaultsPMonsterKilledRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PMonsterKilledRespond_default_instance_;
    new (ptr) ::PMonsterKilledRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PMonsterKilledRespond::InitAsDefaultInstance();
}

void InitDefaultsPMonsterKilledRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPMonsterKilledRespondImpl);
}

void InitDefaultsPKilledRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PKilledRequest_default_instance_;
    new (ptr) ::PKilledRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PKilledRequest::InitAsDefaultInstance();
}

void InitDefaultsPKilledRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPKilledRequestImpl);
}

void InitDefaultsPKilledRespondImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PKilledRespond_default_instance_;
    new (ptr) ::PKilledRespond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PKilledRespond::InitAsDefaultInstance();
}

void InitDefaultsPKilledRespond() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPKilledRespondImpl);
}

void InitDefaultsPPlayerInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PPlayerInfo_default_instance_;
    new (ptr) ::PPlayerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PPlayerInfo::InitAsDefaultInstance();
}

void InitDefaultsPPlayerInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPPlayerInfoImpl);
}

void InitDefaultsPClientStep_Vec2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PClientStep_Vec2_default_instance_;
    new (ptr) ::PClientStep_Vec2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PClientStep_Vec2::InitAsDefaultInstance();
}

void InitDefaultsPClientStep_Vec2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPClientStep_Vec2Impl);
}

void InitDefaultsPClientStep_ActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Vec2();
  {
    void* ptr = &::_PClientStep_Action_default_instance_;
    new (ptr) ::PClientStep_Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PClientStep_Action::InitAsDefaultInstance();
}

void InitDefaultsPClientStep_Action() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPClientStep_ActionImpl);
}

void InitDefaultsPClientStepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Vec2();
  protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Action();
  {
    void* ptr = &::_PClientStep_default_instance_;
    new (ptr) ::PClientStep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PClientStep::InitAsDefaultInstance();
}

void InitDefaultsPClientStep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPClientStepImpl);
}

void InitDefaultsPServerStep_ClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsPClientStep();
  {
    void* ptr = &::_PServerStep_Client_default_instance_;
    new (ptr) ::PServerStep_Client();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PServerStep_Client::InitAsDefaultInstance();
}

void InitDefaultsPServerStep_Client() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPServerStep_ClientImpl);
}

void InitDefaultsPServerStepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessage_2eproto::InitDefaultsPServerStep_Client();
  {
    void* ptr = &::_PServerStep_default_instance_;
    new (ptr) ::PServerStep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PServerStep::InitAsDefaultInstance();
}

void InitDefaultsPServerStep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPServerStepImpl);
}

::google::protobuf::Metadata file_level_metadata[27];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRespond, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PRegisterRespond, errorcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRespond, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PLoginRespond, errorcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchRequest, heroid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchRequest, skinid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond_POtherPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond_POtherPlayerInfo, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond_POtherPlayerInfo, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond_POtherPlayerInfo, heroid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond_POtherPlayerInfo, skinid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond, randomseed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMatchFoundRespond, otherplayers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRequest, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRespond, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerMoveRespond, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRequest, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRespond, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerTurnRespond, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRequest, healthmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRequest, healthremain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRespond, healthmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerHealthRespond, healthremain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, locationx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, locationy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, targetx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, targety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRequest, actionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, locationx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, locationy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, targetx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, targety_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerActionRespond, actionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerBuffRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerBuffRequest, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerBuffRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerBuffRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerBuffRespond, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMonsterKilledRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMonsterKilledRequest, monsterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMonsterKilledRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMonsterKilledRespond, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PMonsterKilledRespond, monsterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRequest, otherplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRespond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRespond, diedplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRespond, killerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PKilledRespond, rank_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Vec2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Vec2, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Vec2, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Action, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Action, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep_Action, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, stepindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, moveinthisstep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, turninthisstep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, actionsinthisstep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PClientStep, lasthealthinthisstep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep_Client, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep_Client, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep_Client, isempty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep_Client, step_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep, stepindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PServerStep, allclients_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PRegisterRequest)},
  { 7, -1, sizeof(::PRegisterRespond)},
  { 14, -1, sizeof(::PLoginRequest)},
  { 21, -1, sizeof(::PLoginRespond)},
  { 28, -1, sizeof(::PMatchRequest)},
  { 36, -1, sizeof(::PMatchFoundRespond_POtherPlayerInfo)},
  { 45, -1, sizeof(::PMatchFoundRespond)},
  { 52, -1, sizeof(::PPlayerMoveRequest)},
  { 59, -1, sizeof(::PPlayerMoveRespond)},
  { 67, -1, sizeof(::PPlayerTurnRequest)},
  { 74, -1, sizeof(::PPlayerTurnRespond)},
  { 82, -1, sizeof(::PPlayerHealthRequest)},
  { 89, -1, sizeof(::PPlayerHealthRespond)},
  { 97, -1, sizeof(::PPlayerActionRequest)},
  { 107, -1, sizeof(::PPlayerActionRespond)},
  { 118, -1, sizeof(::PPlayerBuffRequest)},
  { 124, -1, sizeof(::PPlayerBuffRespond)},
  { 131, -1, sizeof(::PMonsterKilledRequest)},
  { 137, -1, sizeof(::PMonsterKilledRespond)},
  { 144, -1, sizeof(::PKilledRequest)},
  { 150, -1, sizeof(::PKilledRespond)},
  { 158, -1, sizeof(::PPlayerInfo)},
  { 163, -1, sizeof(::PClientStep_Vec2)},
  { 170, -1, sizeof(::PClientStep_Action)},
  { 178, -1, sizeof(::PClientStep)},
  { 188, -1, sizeof(::PServerStep_Client)},
  { 196, -1, sizeof(::PServerStep)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PRegisterRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PLoginRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PMatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PMatchFoundRespond_POtherPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PMatchFoundRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerMoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerMoveRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerTurnRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerTurnRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerHealthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerHealthRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerActionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerActionRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerBuffRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerBuffRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PMonsterKilledRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PMonsterKilledRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PKilledRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PKilledRespond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PClientStep_Vec2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PClientStep_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PClientStep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PServerStep_Client_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PServerStep_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GameMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 27);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021GameMessage.proto\"6\n\020PRegisterRequest\022"
      "\020\n\010UserName\030\001 \001(\t\022\020\n\010PassWord\030\002 \001(\t\"6\n\020P"
      "RegisterRespond\022\017\n\007Success\030\001 \001(\005\022\021\n\tErro"
      "rCode\030\002 \001(\005\"3\n\rPLoginRequest\022\020\n\010UserName"
      "\030\001 \001(\t\022\020\n\010PassWord\030\002 \001(\t\"3\n\rPLoginRespon"
      "d\022\017\n\007Success\030\001 \001(\005\022\021\n\tErrorCode\030\002 \001(\005\"A\n"
      "\rPMatchRequest\022\016\n\006HeroID\030\001 \001(\005\022\016\n\006SkinID"
      "\030\002 \001(\005\022\020\n\010UserName\030\003 \001(\t\"\276\001\n\022PMatchFound"
      "Respond\022\022\n\nRandomSeed\030\001 \001(\005\022:\n\014OtherPlay"
      "ers\030\002 \003(\0132$.PMatchFoundRespond.POtherPla"
      "yerInfo\032X\n\020POtherPlayerInfo\022\020\n\010PlayerID\030"
      "\001 \001(\005\022\022\n\nPlayerName\030\002 \001(\t\022\016\n\006HeroID\030\003 \001("
      "\005\022\016\n\006SkinID\030\004 \001(\005\"*\n\022PPlayerMoveRequest\022"
      "\t\n\001X\030\001 \001(\002\022\t\n\001Y\030\002 \001(\002\"<\n\022PPlayerMoveResp"
      "ond\022\020\n\010PlayerID\030\001 \001(\005\022\t\n\001X\030\002 \001(\002\022\t\n\001Y\030\003 "
      "\001(\002\"*\n\022PPlayerTurnRequest\022\t\n\001X\030\001 \001(\002\022\t\n\001"
      "Y\030\002 \001(\002\"<\n\022PPlayerTurnRespond\022\020\n\010PlayerI"
      "D\030\001 \001(\005\022\t\n\001X\030\002 \001(\002\022\t\n\001Y\030\003 \001(\002\"\?\n\024PPlayer"
      "HealthRequest\022\021\n\tHealthMax\030\001 \001(\002\022\024\n\014Heal"
      "thRemain\030\002 \001(\002\"Q\n\024PPlayerHealthRespond\022\020"
      "\n\010PlayerID\030\001 \001(\005\022\021\n\tHealthMax\030\002 \001(\002\022\024\n\014H"
      "ealthRemain\030\003 \001(\002\"p\n\024PPlayerActionReques"
      "t\022\021\n\tLocationX\030\001 \001(\002\022\021\n\tLocationY\030\002 \001(\002\022"
      "\017\n\007TargetX\030\003 \001(\002\022\017\n\007TargetY\030\004 \001(\002\022\020\n\010Act"
      "ionID\030\005 \001(\005\"\202\001\n\024PPlayerActionRespond\022\020\n\010"
      "PlayerID\030\001 \001(\005\022\021\n\tLocationX\030\002 \001(\002\022\021\n\tLoc"
      "ationY\030\003 \001(\002\022\017\n\007TargetX\030\004 \001(\002\022\017\n\007TargetY"
      "\030\005 \001(\002\022\020\n\010ActionID\030\006 \001(\005\"#\n\022PPlayerBuffR"
      "equest\022\r\n\005Scale\030\001 \001(\002\"5\n\022PPlayerBuffResp"
      "ond\022\020\n\010PlayerID\030\001 \001(\005\022\r\n\005Scale\030\002 \001(\002\"*\n\025"
      "PMonsterKilledRequest\022\021\n\tMonsterID\030\001 \001(\005"
      "\"<\n\025PMonsterKilledRespond\022\020\n\010PlayerID\030\001 "
      "\001(\005\022\021\n\tMonsterID\030\002 \001(\005\"\'\n\016PKilledRequest"
      "\022\025\n\rOtherPlayerID\030\001 \001(\005\"F\n\016PKilledRespon"
      "d\022\024\n\014DiedPlayerID\030\001 \001(\005\022\020\n\010KillerID\030\002 \001("
      "\005\022\014\n\004Rank\030\003 \001(\005\"\r\n\013PPlayerInfo\"\302\002\n\013PClie"
      "ntStep\022\021\n\tStepIndex\030\001 \001(\005\022)\n\016MoveInThisS"
      "tep\030\002 \001(\0132\021.PClientStep.Vec2\022)\n\016TurnInTh"
      "isStep\030\003 \001(\0132\021.PClientStep.Vec2\022.\n\021Actio"
      "nsInThisStep\030\004 \003(\0132\023.PClientStep.Action\022"
      "\034\n\024LastHealthInThisStep\030\005 \001(\002\032\034\n\004Vec2\022\t\n"
      "\001X\030\001 \001(\002\022\t\n\001Y\030\002 \001(\002\032^\n\006Action\022\014\n\004Type\030\001 "
      "\001(\005\022#\n\010Location\030\002 \001(\0132\021.PClientStep.Vec2"
      "\022!\n\006Target\030\003 \001(\0132\021.PClientStep.Vec2\"\222\001\n\013"
      "PServerStep\022\021\n\tStepIndex\030\001 \001(\005\022\'\n\nAllCli"
      "ents\030\002 \003(\0132\023.PServerStep.Client\032G\n\006Clien"
      "t\022\020\n\010PlayerID\030\001 \001(\005\022\017\n\007IsEmpty\030\002 \001(\005\022\032\n\004"
      "Step\030\003 \001(\0132\014.PClientStepb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1912);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameMessage_2eproto

// ===================================================================

void PRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRegisterRequest::kUserNameFieldNumber;
const int PRegisterRequest::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRegisterRequest::PRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRegisterRequest)
}
PRegisterRequest::PRegisterRequest(const PRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PRegisterRequest)
}

void PRegisterRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PRegisterRequest::~PRegisterRequest() {
  // @@protoc_insertion_point(destructor:PRegisterRequest)
  SharedDtor();
}

void PRegisterRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRegisterRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRegisterRequest& PRegisterRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRequest();
  return *internal_default_instance();
}

PRegisterRequest* PRegisterRequest::New(::google::protobuf::Arena* arena) const {
  PRegisterRequest* n = new PRegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRegisterRequest.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PassWord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRegisterRequest.PassWord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRegisterRequest)
  return false;
#undef DO_
}

void PRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterRequest.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterRequest.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PRegisterRequest)
}

::google::protobuf::uint8* PRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterRequest.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterRequest.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRegisterRequest)
  return target;
}

size_t PRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRegisterRequest)
    MergeFrom(*source);
  }
}

void PRegisterRequest::MergeFrom(const PRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRegisterRequest::CopyFrom(const PRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRegisterRequest::IsInitialized() const {
  return true;
}

void PRegisterRequest::Swap(PRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRegisterRequest::InternalSwap(PRegisterRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRegisterRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PRegisterRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRegisterRespond::kSuccessFieldNumber;
const int PRegisterRespond::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRegisterRespond::PRegisterRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRegisterRespond)
}
PRegisterRespond::PRegisterRespond(const PRegisterRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:PRegisterRespond)
}

void PRegisterRespond::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _cached_size_ = 0;
}

PRegisterRespond::~PRegisterRespond() {
  // @@protoc_insertion_point(destructor:PRegisterRespond)
  SharedDtor();
}

void PRegisterRespond::SharedDtor() {
}

void PRegisterRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRegisterRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRegisterRespond& PRegisterRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRespond();
  return *internal_default_instance();
}

PRegisterRespond* PRegisterRespond::New(::google::protobuf::Arena* arena) const {
  PRegisterRespond* n = new PRegisterRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRegisterRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PRegisterRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _internal_metadata_.Clear();
}

bool PRegisterRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRegisterRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ErrorCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRegisterRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRegisterRespond)
  return false;
#undef DO_
}

void PRegisterRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRegisterRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success(), output);
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errorcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PRegisterRespond)
}

::google::protobuf::uint8* PRegisterRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PRegisterRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success(), target);
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errorcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRegisterRespond)
  return target;
}

size_t PRegisterRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRegisterRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Success = 1;
  if (this->success() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->success());
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRegisterRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRegisterRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PRegisterRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRegisterRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRegisterRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRegisterRespond)
    MergeFrom(*source);
  }
}

void PRegisterRespond::MergeFrom(const PRegisterRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRegisterRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void PRegisterRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRegisterRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRegisterRespond::CopyFrom(const PRegisterRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRegisterRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRegisterRespond::IsInitialized() const {
  return true;
}

void PRegisterRespond::Swap(PRegisterRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRegisterRespond::InternalSwap(PRegisterRespond* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRegisterRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PLoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PLoginRequest::kUserNameFieldNumber;
const int PLoginRequest::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PLoginRequest::PLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PLoginRequest)
}
PLoginRequest::PLoginRequest(const PLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PLoginRequest)
}

void PLoginRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PLoginRequest::~PLoginRequest() {
  // @@protoc_insertion_point(destructor:PLoginRequest)
  SharedDtor();
}

void PLoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PLoginRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PLoginRequest& PLoginRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRequest();
  return *internal_default_instance();
}

PLoginRequest* PLoginRequest::New(::google::protobuf::Arena* arena) const {
  PLoginRequest* n = new PLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PLoginRequest.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PassWord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PLoginRequest.PassWord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PLoginRequest)
  return false;
#undef DO_
}

void PLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PLoginRequest.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PLoginRequest.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PLoginRequest)
}

::google::protobuf::uint8* PLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PLoginRequest.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PLoginRequest.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PLoginRequest)
  return target;
}

size_t PLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PLoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PLoginRequest)
    MergeFrom(*source);
  }
}

void PLoginRequest::MergeFrom(const PLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PLoginRequest::CopyFrom(const PLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PLoginRequest::IsInitialized() const {
  return true;
}

void PLoginRequest::Swap(PLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PLoginRequest::InternalSwap(PLoginRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PLoginRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PLoginRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PLoginRespond::kSuccessFieldNumber;
const int PLoginRespond::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PLoginRespond::PLoginRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PLoginRespond)
}
PLoginRespond::PLoginRespond(const PLoginRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:PLoginRespond)
}

void PLoginRespond::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _cached_size_ = 0;
}

PLoginRespond::~PLoginRespond() {
  // @@protoc_insertion_point(destructor:PLoginRespond)
  SharedDtor();
}

void PLoginRespond::SharedDtor() {
}

void PLoginRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PLoginRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PLoginRespond& PLoginRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRespond();
  return *internal_default_instance();
}

PLoginRespond* PLoginRespond::New(::google::protobuf::Arena* arena) const {
  PLoginRespond* n = new PLoginRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PLoginRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PLoginRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _internal_metadata_.Clear();
}

bool PLoginRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PLoginRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ErrorCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PLoginRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PLoginRespond)
  return false;
#undef DO_
}

void PLoginRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PLoginRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success(), output);
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errorcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PLoginRespond)
}

::google::protobuf::uint8* PLoginRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PLoginRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success(), target);
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errorcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PLoginRespond)
  return target;
}

size_t PLoginRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PLoginRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Success = 1;
  if (this->success() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->success());
  }

  // int32 ErrorCode = 2;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PLoginRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PLoginRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PLoginRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PLoginRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PLoginRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PLoginRespond)
    MergeFrom(*source);
  }
}

void PLoginRespond::MergeFrom(const PLoginRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PLoginRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void PLoginRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PLoginRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PLoginRespond::CopyFrom(const PLoginRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PLoginRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PLoginRespond::IsInitialized() const {
  return true;
}

void PLoginRespond::Swap(PLoginRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PLoginRespond::InternalSwap(PLoginRespond* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PLoginRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PMatchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMatchRequest::kHeroIDFieldNumber;
const int PMatchRequest::kSkinIDFieldNumber;
const int PMatchRequest::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMatchRequest::PMatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPMatchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PMatchRequest)
}
PMatchRequest::PMatchRequest(const PMatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&heroid_, &from.heroid_,
    static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&heroid_)) + sizeof(skinid_));
  // @@protoc_insertion_point(copy_constructor:PMatchRequest)
}

void PMatchRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&heroid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&heroid_)) + sizeof(skinid_));
  _cached_size_ = 0;
}

PMatchRequest::~PMatchRequest() {
  // @@protoc_insertion_point(destructor:PMatchRequest)
  SharedDtor();
}

void PMatchRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PMatchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMatchRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PMatchRequest& PMatchRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPMatchRequest();
  return *internal_default_instance();
}

PMatchRequest* PMatchRequest::New(::google::protobuf::Arena* arena) const {
  PMatchRequest* n = new PMatchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&heroid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&heroid_)) + sizeof(skinid_));
  _internal_metadata_.Clear();
}

bool PMatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PMatchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 HeroID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SkinID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PMatchRequest.UserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PMatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PMatchRequest)
  return false;
#undef DO_
}

void PMatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 HeroID = 1;
  if (this->heroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  // int32 SkinID = 2;
  if (this->skinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skinid(), output);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PMatchRequest.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PMatchRequest)
}

::google::protobuf::uint8* PMatchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 HeroID = 1;
  if (this->heroid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  // int32 SkinID = 2;
  if (this->skinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skinid(), target);
  }

  // string UserName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PMatchRequest.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMatchRequest)
  return target;
}

size_t PMatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMatchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UserName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 HeroID = 1;
  if (this->heroid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heroid());
  }

  // int32 SkinID = 2;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skinid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PMatchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PMatchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PMatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PMatchRequest)
    MergeFrom(*source);
  }
}

void PMatchRequest::MergeFrom(const PMatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.heroid() != 0) {
    set_heroid(from.heroid());
  }
  if (from.skinid() != 0) {
    set_skinid(from.skinid());
  }
}

void PMatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMatchRequest::CopyFrom(const PMatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMatchRequest::IsInitialized() const {
  return true;
}

void PMatchRequest::Swap(PMatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMatchRequest::InternalSwap(PMatchRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(heroid_, other->heroid_);
  swap(skinid_, other->skinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMatchRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PMatchFoundRespond_POtherPlayerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMatchFoundRespond_POtherPlayerInfo::kPlayerIDFieldNumber;
const int PMatchFoundRespond_POtherPlayerInfo::kPlayerNameFieldNumber;
const int PMatchFoundRespond_POtherPlayerInfo::kHeroIDFieldNumber;
const int PMatchFoundRespond_POtherPlayerInfo::kSkinIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMatchFoundRespond_POtherPlayerInfo::PMatchFoundRespond_POtherPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond_POtherPlayerInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PMatchFoundRespond.POtherPlayerInfo)
}
PMatchFoundRespond_POtherPlayerInfo::PMatchFoundRespond_POtherPlayerInfo(const PMatchFoundRespond_POtherPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&skinid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(skinid_));
  // @@protoc_insertion_point(copy_constructor:PMatchFoundRespond.POtherPlayerInfo)
}

void PMatchFoundRespond_POtherPlayerInfo::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(skinid_));
  _cached_size_ = 0;
}

PMatchFoundRespond_POtherPlayerInfo::~PMatchFoundRespond_POtherPlayerInfo() {
  // @@protoc_insertion_point(destructor:PMatchFoundRespond.POtherPlayerInfo)
  SharedDtor();
}

void PMatchFoundRespond_POtherPlayerInfo::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PMatchFoundRespond_POtherPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMatchFoundRespond_POtherPlayerInfo::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PMatchFoundRespond_POtherPlayerInfo& PMatchFoundRespond_POtherPlayerInfo::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond_POtherPlayerInfo();
  return *internal_default_instance();
}

PMatchFoundRespond_POtherPlayerInfo* PMatchFoundRespond_POtherPlayerInfo::New(::google::protobuf::Arena* arena) const {
  PMatchFoundRespond_POtherPlayerInfo* n = new PMatchFoundRespond_POtherPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMatchFoundRespond_POtherPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PMatchFoundRespond.POtherPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skinid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(skinid_));
  _internal_metadata_.Clear();
}

bool PMatchFoundRespond_POtherPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PMatchFoundRespond.POtherPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PlayerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PMatchFoundRespond.POtherPlayerInfo.PlayerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 HeroID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SkinID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PMatchFoundRespond.POtherPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PMatchFoundRespond.POtherPlayerInfo)
  return false;
#undef DO_
}

void PMatchFoundRespond_POtherPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PMatchFoundRespond.POtherPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PMatchFoundRespond.POtherPlayerInfo.PlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playername(), output);
  }

  // int32 HeroID = 3;
  if (this->heroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->heroid(), output);
  }

  // int32 SkinID = 4;
  if (this->skinid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skinid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PMatchFoundRespond.POtherPlayerInfo)
}

::google::protobuf::uint8* PMatchFoundRespond_POtherPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PMatchFoundRespond.POtherPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PMatchFoundRespond.POtherPlayerInfo.PlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playername(), target);
  }

  // int32 HeroID = 3;
  if (this->heroid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->heroid(), target);
  }

  // int32 SkinID = 4;
  if (this->skinid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skinid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMatchFoundRespond.POtherPlayerInfo)
  return target;
}

size_t PMatchFoundRespond_POtherPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMatchFoundRespond.POtherPlayerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // int32 HeroID = 3;
  if (this->heroid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heroid());
  }

  // int32 SkinID = 4;
  if (this->skinid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skinid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMatchFoundRespond_POtherPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PMatchFoundRespond.POtherPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PMatchFoundRespond_POtherPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PMatchFoundRespond_POtherPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PMatchFoundRespond.POtherPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PMatchFoundRespond.POtherPlayerInfo)
    MergeFrom(*source);
  }
}

void PMatchFoundRespond_POtherPlayerInfo::MergeFrom(const PMatchFoundRespond_POtherPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PMatchFoundRespond.POtherPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.heroid() != 0) {
    set_heroid(from.heroid());
  }
  if (from.skinid() != 0) {
    set_skinid(from.skinid());
  }
}

void PMatchFoundRespond_POtherPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PMatchFoundRespond.POtherPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMatchFoundRespond_POtherPlayerInfo::CopyFrom(const PMatchFoundRespond_POtherPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMatchFoundRespond.POtherPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMatchFoundRespond_POtherPlayerInfo::IsInitialized() const {
  return true;
}

void PMatchFoundRespond_POtherPlayerInfo::Swap(PMatchFoundRespond_POtherPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMatchFoundRespond_POtherPlayerInfo::InternalSwap(PMatchFoundRespond_POtherPlayerInfo* other) {
  using std::swap;
  playername_.Swap(&other->playername_);
  swap(playerid_, other->playerid_);
  swap(heroid_, other->heroid_);
  swap(skinid_, other->skinid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMatchFoundRespond_POtherPlayerInfo::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PMatchFoundRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMatchFoundRespond::kRandomSeedFieldNumber;
const int PMatchFoundRespond::kOtherPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMatchFoundRespond::PMatchFoundRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PMatchFoundRespond)
}
PMatchFoundRespond::PMatchFoundRespond(const PMatchFoundRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      otherplayers_(from.otherplayers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  randomseed_ = from.randomseed_;
  // @@protoc_insertion_point(copy_constructor:PMatchFoundRespond)
}

void PMatchFoundRespond::SharedCtor() {
  randomseed_ = 0;
  _cached_size_ = 0;
}

PMatchFoundRespond::~PMatchFoundRespond() {
  // @@protoc_insertion_point(destructor:PMatchFoundRespond)
  SharedDtor();
}

void PMatchFoundRespond::SharedDtor() {
}

void PMatchFoundRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMatchFoundRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PMatchFoundRespond& PMatchFoundRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond();
  return *internal_default_instance();
}

PMatchFoundRespond* PMatchFoundRespond::New(::google::protobuf::Arena* arena) const {
  PMatchFoundRespond* n = new PMatchFoundRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMatchFoundRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PMatchFoundRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  otherplayers_.Clear();
  randomseed_ = 0;
  _internal_metadata_.Clear();
}

bool PMatchFoundRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PMatchFoundRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RandomSeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &randomseed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_otherplayers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PMatchFoundRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PMatchFoundRespond)
  return false;
#undef DO_
}

void PMatchFoundRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PMatchFoundRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RandomSeed = 1;
  if (this->randomseed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->randomseed(), output);
  }

  // repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->otherplayers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->otherplayers(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PMatchFoundRespond)
}

::google::protobuf::uint8* PMatchFoundRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PMatchFoundRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RandomSeed = 1;
  if (this->randomseed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->randomseed(), target);
  }

  // repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->otherplayers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->otherplayers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMatchFoundRespond)
  return target;
}

size_t PMatchFoundRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMatchFoundRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->otherplayers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->otherplayers(static_cast<int>(i)));
    }
  }

  // int32 RandomSeed = 1;
  if (this->randomseed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->randomseed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMatchFoundRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PMatchFoundRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PMatchFoundRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PMatchFoundRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PMatchFoundRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PMatchFoundRespond)
    MergeFrom(*source);
  }
}

void PMatchFoundRespond::MergeFrom(const PMatchFoundRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PMatchFoundRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  otherplayers_.MergeFrom(from.otherplayers_);
  if (from.randomseed() != 0) {
    set_randomseed(from.randomseed());
  }
}

void PMatchFoundRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PMatchFoundRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMatchFoundRespond::CopyFrom(const PMatchFoundRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMatchFoundRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMatchFoundRespond::IsInitialized() const {
  return true;
}

void PMatchFoundRespond::Swap(PMatchFoundRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMatchFoundRespond::InternalSwap(PMatchFoundRespond* other) {
  using std::swap;
  otherplayers_.InternalSwap(&other->otherplayers_);
  swap(randomseed_, other->randomseed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMatchFoundRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerMoveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerMoveRequest::kXFieldNumber;
const int PPlayerMoveRequest::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerMoveRequest::PPlayerMoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerMoveRequest)
}
PPlayerMoveRequest::PPlayerMoveRequest(const PPlayerMoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:PPlayerMoveRequest)
}

void PPlayerMoveRequest::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

PPlayerMoveRequest::~PPlayerMoveRequest() {
  // @@protoc_insertion_point(destructor:PPlayerMoveRequest)
  SharedDtor();
}

void PPlayerMoveRequest::SharedDtor() {
}

void PPlayerMoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerMoveRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerMoveRequest& PPlayerMoveRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRequest();
  return *internal_default_instance();
}

PPlayerMoveRequest* PPlayerMoveRequest::New(::google::protobuf::Arena* arena) const {
  PPlayerMoveRequest* n = new PPlayerMoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerMoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool PPlayerMoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerMoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerMoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerMoveRequest)
  return false;
#undef DO_
}

void PPlayerMoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerMoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerMoveRequest)
}

::google::protobuf::uint8* PPlayerMoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerMoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerMoveRequest)
  return target;
}

size_t PPlayerMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerMoveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float X = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerMoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerMoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerMoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerMoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerMoveRequest)
    MergeFrom(*source);
  }
}

void PPlayerMoveRequest::MergeFrom(const PPlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void PPlayerMoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerMoveRequest::CopyFrom(const PPlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerMoveRequest::IsInitialized() const {
  return true;
}

void PPlayerMoveRequest::Swap(PPlayerMoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerMoveRequest::InternalSwap(PPlayerMoveRequest* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerMoveRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerMoveRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerMoveRespond::kPlayerIDFieldNumber;
const int PPlayerMoveRespond::kXFieldNumber;
const int PPlayerMoveRespond::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerMoveRespond::PPlayerMoveRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerMoveRespond)
}
PPlayerMoveRespond::PPlayerMoveRespond(const PPlayerMoveRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:PPlayerMoveRespond)
}

void PPlayerMoveRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  _cached_size_ = 0;
}

PPlayerMoveRespond::~PPlayerMoveRespond() {
  // @@protoc_insertion_point(destructor:PPlayerMoveRespond)
  SharedDtor();
}

void PPlayerMoveRespond::SharedDtor() {
}

void PPlayerMoveRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerMoveRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerMoveRespond& PPlayerMoveRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRespond();
  return *internal_default_instance();
}

PPlayerMoveRespond* PPlayerMoveRespond::New(::google::protobuf::Arena* arena) const {
  PPlayerMoveRespond* n = new PPlayerMoveRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerMoveRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerMoveRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool PPlayerMoveRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerMoveRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float X = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerMoveRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerMoveRespond)
  return false;
#undef DO_
}

void PPlayerMoveRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerMoveRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // float X = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float Y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerMoveRespond)
}

::google::protobuf::uint8* PPlayerMoveRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerMoveRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // float X = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float Y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerMoveRespond)
  return target;
}

size_t PPlayerMoveRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerMoveRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // float X = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerMoveRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerMoveRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerMoveRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerMoveRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerMoveRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerMoveRespond)
    MergeFrom(*source);
  }
}

void PPlayerMoveRespond::MergeFrom(const PPlayerMoveRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerMoveRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void PPlayerMoveRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerMoveRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerMoveRespond::CopyFrom(const PPlayerMoveRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerMoveRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerMoveRespond::IsInitialized() const {
  return true;
}

void PPlayerMoveRespond::Swap(PPlayerMoveRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerMoveRespond::InternalSwap(PPlayerMoveRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerMoveRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerTurnRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerTurnRequest::kXFieldNumber;
const int PPlayerTurnRequest::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerTurnRequest::PPlayerTurnRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerTurnRequest)
}
PPlayerTurnRequest::PPlayerTurnRequest(const PPlayerTurnRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:PPlayerTurnRequest)
}

void PPlayerTurnRequest::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

PPlayerTurnRequest::~PPlayerTurnRequest() {
  // @@protoc_insertion_point(destructor:PPlayerTurnRequest)
  SharedDtor();
}

void PPlayerTurnRequest::SharedDtor() {
}

void PPlayerTurnRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerTurnRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerTurnRequest& PPlayerTurnRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRequest();
  return *internal_default_instance();
}

PPlayerTurnRequest* PPlayerTurnRequest::New(::google::protobuf::Arena* arena) const {
  PPlayerTurnRequest* n = new PPlayerTurnRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerTurnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerTurnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool PPlayerTurnRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerTurnRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerTurnRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerTurnRequest)
  return false;
#undef DO_
}

void PPlayerTurnRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerTurnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerTurnRequest)
}

::google::protobuf::uint8* PPlayerTurnRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerTurnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerTurnRequest)
  return target;
}

size_t PPlayerTurnRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerTurnRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float X = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerTurnRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerTurnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerTurnRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerTurnRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerTurnRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerTurnRequest)
    MergeFrom(*source);
  }
}

void PPlayerTurnRequest::MergeFrom(const PPlayerTurnRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerTurnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void PPlayerTurnRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerTurnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerTurnRequest::CopyFrom(const PPlayerTurnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerTurnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerTurnRequest::IsInitialized() const {
  return true;
}

void PPlayerTurnRequest::Swap(PPlayerTurnRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerTurnRequest::InternalSwap(PPlayerTurnRequest* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerTurnRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerTurnRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerTurnRespond::kPlayerIDFieldNumber;
const int PPlayerTurnRespond::kXFieldNumber;
const int PPlayerTurnRespond::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerTurnRespond::PPlayerTurnRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerTurnRespond)
}
PPlayerTurnRespond::PPlayerTurnRespond(const PPlayerTurnRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:PPlayerTurnRespond)
}

void PPlayerTurnRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  _cached_size_ = 0;
}

PPlayerTurnRespond::~PPlayerTurnRespond() {
  // @@protoc_insertion_point(destructor:PPlayerTurnRespond)
  SharedDtor();
}

void PPlayerTurnRespond::SharedDtor() {
}

void PPlayerTurnRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerTurnRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerTurnRespond& PPlayerTurnRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRespond();
  return *internal_default_instance();
}

PPlayerTurnRespond* PPlayerTurnRespond::New(::google::protobuf::Arena* arena) const {
  PPlayerTurnRespond* n = new PPlayerTurnRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerTurnRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerTurnRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool PPlayerTurnRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerTurnRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float X = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerTurnRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerTurnRespond)
  return false;
#undef DO_
}

void PPlayerTurnRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerTurnRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // float X = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float Y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerTurnRespond)
}

::google::protobuf::uint8* PPlayerTurnRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerTurnRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // float X = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float Y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerTurnRespond)
  return target;
}

size_t PPlayerTurnRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerTurnRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // float X = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerTurnRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerTurnRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerTurnRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerTurnRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerTurnRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerTurnRespond)
    MergeFrom(*source);
  }
}

void PPlayerTurnRespond::MergeFrom(const PPlayerTurnRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerTurnRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void PPlayerTurnRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerTurnRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerTurnRespond::CopyFrom(const PPlayerTurnRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerTurnRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerTurnRespond::IsInitialized() const {
  return true;
}

void PPlayerTurnRespond::Swap(PPlayerTurnRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerTurnRespond::InternalSwap(PPlayerTurnRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerTurnRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerHealthRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerHealthRequest::kHealthMaxFieldNumber;
const int PPlayerHealthRequest::kHealthRemainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerHealthRequest::PPlayerHealthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerHealthRequest)
}
PPlayerHealthRequest::PPlayerHealthRequest(const PPlayerHealthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&healthmax_, &from.healthmax_,
    static_cast<size_t>(reinterpret_cast<char*>(&healthremain_) -
    reinterpret_cast<char*>(&healthmax_)) + sizeof(healthremain_));
  // @@protoc_insertion_point(copy_constructor:PPlayerHealthRequest)
}

void PPlayerHealthRequest::SharedCtor() {
  ::memset(&healthmax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&healthremain_) -
      reinterpret_cast<char*>(&healthmax_)) + sizeof(healthremain_));
  _cached_size_ = 0;
}

PPlayerHealthRequest::~PPlayerHealthRequest() {
  // @@protoc_insertion_point(destructor:PPlayerHealthRequest)
  SharedDtor();
}

void PPlayerHealthRequest::SharedDtor() {
}

void PPlayerHealthRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerHealthRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerHealthRequest& PPlayerHealthRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRequest();
  return *internal_default_instance();
}

PPlayerHealthRequest* PPlayerHealthRequest::New(::google::protobuf::Arena* arena) const {
  PPlayerHealthRequest* n = new PPlayerHealthRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerHealthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerHealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&healthmax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&healthremain_) -
      reinterpret_cast<char*>(&healthmax_)) + sizeof(healthremain_));
  _internal_metadata_.Clear();
}

bool PPlayerHealthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerHealthRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float HealthMax = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float HealthRemain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthremain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerHealthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerHealthRequest)
  return false;
#undef DO_
}

void PPlayerHealthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerHealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float HealthMax = 1;
  if (this->healthmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->healthmax(), output);
  }

  // float HealthRemain = 2;
  if (this->healthremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->healthremain(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerHealthRequest)
}

::google::protobuf::uint8* PPlayerHealthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerHealthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float HealthMax = 1;
  if (this->healthmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->healthmax(), target);
  }

  // float HealthRemain = 2;
  if (this->healthremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->healthremain(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerHealthRequest)
  return target;
}

size_t PPlayerHealthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerHealthRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float HealthMax = 1;
  if (this->healthmax() != 0) {
    total_size += 1 + 4;
  }

  // float HealthRemain = 2;
  if (this->healthremain() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerHealthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerHealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerHealthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerHealthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerHealthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerHealthRequest)
    MergeFrom(*source);
  }
}

void PPlayerHealthRequest::MergeFrom(const PPlayerHealthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerHealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.healthmax() != 0) {
    set_healthmax(from.healthmax());
  }
  if (from.healthremain() != 0) {
    set_healthremain(from.healthremain());
  }
}

void PPlayerHealthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerHealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerHealthRequest::CopyFrom(const PPlayerHealthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerHealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerHealthRequest::IsInitialized() const {
  return true;
}

void PPlayerHealthRequest::Swap(PPlayerHealthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerHealthRequest::InternalSwap(PPlayerHealthRequest* other) {
  using std::swap;
  swap(healthmax_, other->healthmax_);
  swap(healthremain_, other->healthremain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerHealthRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerHealthRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerHealthRespond::kPlayerIDFieldNumber;
const int PPlayerHealthRespond::kHealthMaxFieldNumber;
const int PPlayerHealthRespond::kHealthRemainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerHealthRespond::PPlayerHealthRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerHealthRespond)
}
PPlayerHealthRespond::PPlayerHealthRespond(const PPlayerHealthRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&healthremain_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(healthremain_));
  // @@protoc_insertion_point(copy_constructor:PPlayerHealthRespond)
}

void PPlayerHealthRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&healthremain_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(healthremain_));
  _cached_size_ = 0;
}

PPlayerHealthRespond::~PPlayerHealthRespond() {
  // @@protoc_insertion_point(destructor:PPlayerHealthRespond)
  SharedDtor();
}

void PPlayerHealthRespond::SharedDtor() {
}

void PPlayerHealthRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerHealthRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerHealthRespond& PPlayerHealthRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRespond();
  return *internal_default_instance();
}

PPlayerHealthRespond* PPlayerHealthRespond::New(::google::protobuf::Arena* arena) const {
  PPlayerHealthRespond* n = new PPlayerHealthRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerHealthRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerHealthRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&healthremain_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(healthremain_));
  _internal_metadata_.Clear();
}

bool PPlayerHealthRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerHealthRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float HealthMax = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float HealthRemain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &healthremain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerHealthRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerHealthRespond)
  return false;
#undef DO_
}

void PPlayerHealthRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerHealthRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // float HealthMax = 2;
  if (this->healthmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->healthmax(), output);
  }

  // float HealthRemain = 3;
  if (this->healthremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->healthremain(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerHealthRespond)
}

::google::protobuf::uint8* PPlayerHealthRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerHealthRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // float HealthMax = 2;
  if (this->healthmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->healthmax(), target);
  }

  // float HealthRemain = 3;
  if (this->healthremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->healthremain(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerHealthRespond)
  return target;
}

size_t PPlayerHealthRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerHealthRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // float HealthMax = 2;
  if (this->healthmax() != 0) {
    total_size += 1 + 4;
  }

  // float HealthRemain = 3;
  if (this->healthremain() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerHealthRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerHealthRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerHealthRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerHealthRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerHealthRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerHealthRespond)
    MergeFrom(*source);
  }
}

void PPlayerHealthRespond::MergeFrom(const PPlayerHealthRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerHealthRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.healthmax() != 0) {
    set_healthmax(from.healthmax());
  }
  if (from.healthremain() != 0) {
    set_healthremain(from.healthremain());
  }
}

void PPlayerHealthRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerHealthRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerHealthRespond::CopyFrom(const PPlayerHealthRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerHealthRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerHealthRespond::IsInitialized() const {
  return true;
}

void PPlayerHealthRespond::Swap(PPlayerHealthRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerHealthRespond::InternalSwap(PPlayerHealthRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(healthmax_, other->healthmax_);
  swap(healthremain_, other->healthremain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerHealthRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerActionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerActionRequest::kLocationXFieldNumber;
const int PPlayerActionRequest::kLocationYFieldNumber;
const int PPlayerActionRequest::kTargetXFieldNumber;
const int PPlayerActionRequest::kTargetYFieldNumber;
const int PPlayerActionRequest::kActionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerActionRequest::PPlayerActionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerActionRequest)
}
PPlayerActionRequest::PPlayerActionRequest(const PPlayerActionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&locationx_, &from.locationx_,
    static_cast<size_t>(reinterpret_cast<char*>(&actionid_) -
    reinterpret_cast<char*>(&locationx_)) + sizeof(actionid_));
  // @@protoc_insertion_point(copy_constructor:PPlayerActionRequest)
}

void PPlayerActionRequest::SharedCtor() {
  ::memset(&locationx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&locationx_)) + sizeof(actionid_));
  _cached_size_ = 0;
}

PPlayerActionRequest::~PPlayerActionRequest() {
  // @@protoc_insertion_point(destructor:PPlayerActionRequest)
  SharedDtor();
}

void PPlayerActionRequest::SharedDtor() {
}

void PPlayerActionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerActionRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerActionRequest& PPlayerActionRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRequest();
  return *internal_default_instance();
}

PPlayerActionRequest* PPlayerActionRequest::New(::google::protobuf::Arena* arena) const {
  PPlayerActionRequest* n = new PPlayerActionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&locationx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&locationx_)) + sizeof(actionid_));
  _internal_metadata_.Clear();
}

bool PPlayerActionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerActionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float LocationX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LocationY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TargetX = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TargetY = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerActionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerActionRequest)
  return false;
#undef DO_
}

void PPlayerActionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float LocationX = 1;
  if (this->locationx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->locationx(), output);
  }

  // float LocationY = 2;
  if (this->locationy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->locationy(), output);
  }

  // float TargetX = 3;
  if (this->targetx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->targetx(), output);
  }

  // float TargetY = 4;
  if (this->targety() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->targety(), output);
  }

  // int32 ActionID = 5;
  if (this->actionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->actionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerActionRequest)
}

::google::protobuf::uint8* PPlayerActionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float LocationX = 1;
  if (this->locationx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->locationx(), target);
  }

  // float LocationY = 2;
  if (this->locationy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->locationy(), target);
  }

  // float TargetX = 3;
  if (this->targetx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->targetx(), target);
  }

  // float TargetY = 4;
  if (this->targety() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->targety(), target);
  }

  // int32 ActionID = 5;
  if (this->actionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->actionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerActionRequest)
  return target;
}

size_t PPlayerActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerActionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float LocationX = 1;
  if (this->locationx() != 0) {
    total_size += 1 + 4;
  }

  // float LocationY = 2;
  if (this->locationy() != 0) {
    total_size += 1 + 4;
  }

  // float TargetX = 3;
  if (this->targetx() != 0) {
    total_size += 1 + 4;
  }

  // float TargetY = 4;
  if (this->targety() != 0) {
    total_size += 1 + 4;
  }

  // int32 ActionID = 5;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerActionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerActionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerActionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerActionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerActionRequest)
    MergeFrom(*source);
  }
}

void PPlayerActionRequest::MergeFrom(const PPlayerActionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locationx() != 0) {
    set_locationx(from.locationx());
  }
  if (from.locationy() != 0) {
    set_locationy(from.locationy());
  }
  if (from.targetx() != 0) {
    set_targetx(from.targetx());
  }
  if (from.targety() != 0) {
    set_targety(from.targety());
  }
  if (from.actionid() != 0) {
    set_actionid(from.actionid());
  }
}

void PPlayerActionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerActionRequest::CopyFrom(const PPlayerActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerActionRequest::IsInitialized() const {
  return true;
}

void PPlayerActionRequest::Swap(PPlayerActionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerActionRequest::InternalSwap(PPlayerActionRequest* other) {
  using std::swap;
  swap(locationx_, other->locationx_);
  swap(locationy_, other->locationy_);
  swap(targetx_, other->targetx_);
  swap(targety_, other->targety_);
  swap(actionid_, other->actionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerActionRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerActionRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerActionRespond::kPlayerIDFieldNumber;
const int PPlayerActionRespond::kLocationXFieldNumber;
const int PPlayerActionRespond::kLocationYFieldNumber;
const int PPlayerActionRespond::kTargetXFieldNumber;
const int PPlayerActionRespond::kTargetYFieldNumber;
const int PPlayerActionRespond::kActionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerActionRespond::PPlayerActionRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerActionRespond)
}
PPlayerActionRespond::PPlayerActionRespond(const PPlayerActionRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&actionid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(actionid_));
  // @@protoc_insertion_point(copy_constructor:PPlayerActionRespond)
}

void PPlayerActionRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(actionid_));
  _cached_size_ = 0;
}

PPlayerActionRespond::~PPlayerActionRespond() {
  // @@protoc_insertion_point(destructor:PPlayerActionRespond)
  SharedDtor();
}

void PPlayerActionRespond::SharedDtor() {
}

void PPlayerActionRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerActionRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerActionRespond& PPlayerActionRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRespond();
  return *internal_default_instance();
}

PPlayerActionRespond* PPlayerActionRespond::New(::google::protobuf::Arena* arena) const {
  PPlayerActionRespond* n = new PPlayerActionRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerActionRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerActionRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actionid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(actionid_));
  _internal_metadata_.Clear();
}

bool PPlayerActionRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerActionRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LocationX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LocationY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &locationy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TargetX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float TargetY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targety_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerActionRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerActionRespond)
  return false;
#undef DO_
}

void PPlayerActionRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerActionRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // float LocationX = 2;
  if (this->locationx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->locationx(), output);
  }

  // float LocationY = 3;
  if (this->locationy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->locationy(), output);
  }

  // float TargetX = 4;
  if (this->targetx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->targetx(), output);
  }

  // float TargetY = 5;
  if (this->targety() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->targety(), output);
  }

  // int32 ActionID = 6;
  if (this->actionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->actionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerActionRespond)
}

::google::protobuf::uint8* PPlayerActionRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerActionRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // float LocationX = 2;
  if (this->locationx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->locationx(), target);
  }

  // float LocationY = 3;
  if (this->locationy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->locationy(), target);
  }

  // float TargetX = 4;
  if (this->targetx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->targetx(), target);
  }

  // float TargetY = 5;
  if (this->targety() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->targety(), target);
  }

  // int32 ActionID = 6;
  if (this->actionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->actionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerActionRespond)
  return target;
}

size_t PPlayerActionRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerActionRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // float LocationX = 2;
  if (this->locationx() != 0) {
    total_size += 1 + 4;
  }

  // float LocationY = 3;
  if (this->locationy() != 0) {
    total_size += 1 + 4;
  }

  // float TargetX = 4;
  if (this->targetx() != 0) {
    total_size += 1 + 4;
  }

  // float TargetY = 5;
  if (this->targety() != 0) {
    total_size += 1 + 4;
  }

  // int32 ActionID = 6;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerActionRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerActionRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerActionRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerActionRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerActionRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerActionRespond)
    MergeFrom(*source);
  }
}

void PPlayerActionRespond::MergeFrom(const PPlayerActionRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerActionRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.locationx() != 0) {
    set_locationx(from.locationx());
  }
  if (from.locationy() != 0) {
    set_locationy(from.locationy());
  }
  if (from.targetx() != 0) {
    set_targetx(from.targetx());
  }
  if (from.targety() != 0) {
    set_targety(from.targety());
  }
  if (from.actionid() != 0) {
    set_actionid(from.actionid());
  }
}

void PPlayerActionRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerActionRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerActionRespond::CopyFrom(const PPlayerActionRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerActionRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerActionRespond::IsInitialized() const {
  return true;
}

void PPlayerActionRespond::Swap(PPlayerActionRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerActionRespond::InternalSwap(PPlayerActionRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(locationx_, other->locationx_);
  swap(locationy_, other->locationy_);
  swap(targetx_, other->targetx_);
  swap(targety_, other->targety_);
  swap(actionid_, other->actionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerActionRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerBuffRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerBuffRequest::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerBuffRequest::PPlayerBuffRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerBuffRequest)
}
PPlayerBuffRequest::PPlayerBuffRequest(const PPlayerBuffRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scale_ = from.scale_;
  // @@protoc_insertion_point(copy_constructor:PPlayerBuffRequest)
}

void PPlayerBuffRequest::SharedCtor() {
  scale_ = 0;
  _cached_size_ = 0;
}

PPlayerBuffRequest::~PPlayerBuffRequest() {
  // @@protoc_insertion_point(destructor:PPlayerBuffRequest)
  SharedDtor();
}

void PPlayerBuffRequest::SharedDtor() {
}

void PPlayerBuffRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerBuffRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerBuffRequest& PPlayerBuffRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRequest();
  return *internal_default_instance();
}

PPlayerBuffRequest* PPlayerBuffRequest::New(::google::protobuf::Arena* arena) const {
  PPlayerBuffRequest* n = new PPlayerBuffRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerBuffRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerBuffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scale_ = 0;
  _internal_metadata_.Clear();
}

bool PPlayerBuffRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerBuffRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float Scale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerBuffRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerBuffRequest)
  return false;
#undef DO_
}

void PPlayerBuffRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerBuffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Scale = 1;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerBuffRequest)
}

::google::protobuf::uint8* PPlayerBuffRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerBuffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Scale = 1;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerBuffRequest)
  return target;
}

size_t PPlayerBuffRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerBuffRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float Scale = 1;
  if (this->scale() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerBuffRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerBuffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerBuffRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerBuffRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerBuffRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerBuffRequest)
    MergeFrom(*source);
  }
}

void PPlayerBuffRequest::MergeFrom(const PPlayerBuffRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerBuffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void PPlayerBuffRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerBuffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerBuffRequest::CopyFrom(const PPlayerBuffRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerBuffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerBuffRequest::IsInitialized() const {
  return true;
}

void PPlayerBuffRequest::Swap(PPlayerBuffRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerBuffRequest::InternalSwap(PPlayerBuffRequest* other) {
  using std::swap;
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerBuffRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerBuffRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPlayerBuffRespond::kPlayerIDFieldNumber;
const int PPlayerBuffRespond::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerBuffRespond::PPlayerBuffRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerBuffRespond)
}
PPlayerBuffRespond::PPlayerBuffRespond(const PPlayerBuffRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(scale_));
  // @@protoc_insertion_point(copy_constructor:PPlayerBuffRespond)
}

void PPlayerBuffRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(scale_));
  _cached_size_ = 0;
}

PPlayerBuffRespond::~PPlayerBuffRespond() {
  // @@protoc_insertion_point(destructor:PPlayerBuffRespond)
  SharedDtor();
}

void PPlayerBuffRespond::SharedDtor() {
}

void PPlayerBuffRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerBuffRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerBuffRespond& PPlayerBuffRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRespond();
  return *internal_default_instance();
}

PPlayerBuffRespond* PPlayerBuffRespond::New(::google::protobuf::Arena* arena) const {
  PPlayerBuffRespond* n = new PPlayerBuffRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerBuffRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerBuffRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(scale_));
  _internal_metadata_.Clear();
}

bool PPlayerBuffRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerBuffRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Scale = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerBuffRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerBuffRespond)
  return false;
#undef DO_
}

void PPlayerBuffRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerBuffRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // float Scale = 2;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerBuffRespond)
}

::google::protobuf::uint8* PPlayerBuffRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerBuffRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // float Scale = 2;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerBuffRespond)
  return target;
}

size_t PPlayerBuffRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerBuffRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // float Scale = 2;
  if (this->scale() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerBuffRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerBuffRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerBuffRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerBuffRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerBuffRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerBuffRespond)
    MergeFrom(*source);
  }
}

void PPlayerBuffRespond::MergeFrom(const PPlayerBuffRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerBuffRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void PPlayerBuffRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerBuffRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerBuffRespond::CopyFrom(const PPlayerBuffRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerBuffRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerBuffRespond::IsInitialized() const {
  return true;
}

void PPlayerBuffRespond::Swap(PPlayerBuffRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerBuffRespond::InternalSwap(PPlayerBuffRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerBuffRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PMonsterKilledRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMonsterKilledRequest::kMonsterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMonsterKilledRequest::PMonsterKilledRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PMonsterKilledRequest)
}
PMonsterKilledRequest::PMonsterKilledRequest(const PMonsterKilledRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monsterid_ = from.monsterid_;
  // @@protoc_insertion_point(copy_constructor:PMonsterKilledRequest)
}

void PMonsterKilledRequest::SharedCtor() {
  monsterid_ = 0;
  _cached_size_ = 0;
}

PMonsterKilledRequest::~PMonsterKilledRequest() {
  // @@protoc_insertion_point(destructor:PMonsterKilledRequest)
  SharedDtor();
}

void PMonsterKilledRequest::SharedDtor() {
}

void PMonsterKilledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMonsterKilledRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PMonsterKilledRequest& PMonsterKilledRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRequest();
  return *internal_default_instance();
}

PMonsterKilledRequest* PMonsterKilledRequest::New(::google::protobuf::Arena* arena) const {
  PMonsterKilledRequest* n = new PMonsterKilledRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMonsterKilledRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PMonsterKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monsterid_ = 0;
  _internal_metadata_.Clear();
}

bool PMonsterKilledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PMonsterKilledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 MonsterID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monsterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PMonsterKilledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PMonsterKilledRequest)
  return false;
#undef DO_
}

void PMonsterKilledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PMonsterKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MonsterID = 1;
  if (this->monsterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->monsterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PMonsterKilledRequest)
}

::google::protobuf::uint8* PMonsterKilledRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PMonsterKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MonsterID = 1;
  if (this->monsterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->monsterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMonsterKilledRequest)
  return target;
}

size_t PMonsterKilledRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMonsterKilledRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 MonsterID = 1;
  if (this->monsterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->monsterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMonsterKilledRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PMonsterKilledRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PMonsterKilledRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PMonsterKilledRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PMonsterKilledRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PMonsterKilledRequest)
    MergeFrom(*source);
  }
}

void PMonsterKilledRequest::MergeFrom(const PMonsterKilledRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PMonsterKilledRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.monsterid() != 0) {
    set_monsterid(from.monsterid());
  }
}

void PMonsterKilledRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PMonsterKilledRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMonsterKilledRequest::CopyFrom(const PMonsterKilledRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMonsterKilledRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMonsterKilledRequest::IsInitialized() const {
  return true;
}

void PMonsterKilledRequest::Swap(PMonsterKilledRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMonsterKilledRequest::InternalSwap(PMonsterKilledRequest* other) {
  using std::swap;
  swap(monsterid_, other->monsterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMonsterKilledRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PMonsterKilledRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PMonsterKilledRespond::kPlayerIDFieldNumber;
const int PMonsterKilledRespond::kMonsterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PMonsterKilledRespond::PMonsterKilledRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PMonsterKilledRespond)
}
PMonsterKilledRespond::PMonsterKilledRespond(const PMonsterKilledRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&monsterid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(monsterid_));
  // @@protoc_insertion_point(copy_constructor:PMonsterKilledRespond)
}

void PMonsterKilledRespond::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monsterid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(monsterid_));
  _cached_size_ = 0;
}

PMonsterKilledRespond::~PMonsterKilledRespond() {
  // @@protoc_insertion_point(destructor:PMonsterKilledRespond)
  SharedDtor();
}

void PMonsterKilledRespond::SharedDtor() {
}

void PMonsterKilledRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PMonsterKilledRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PMonsterKilledRespond& PMonsterKilledRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRespond();
  return *internal_default_instance();
}

PMonsterKilledRespond* PMonsterKilledRespond::New(::google::protobuf::Arena* arena) const {
  PMonsterKilledRespond* n = new PMonsterKilledRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PMonsterKilledRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PMonsterKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monsterid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(monsterid_));
  _internal_metadata_.Clear();
}

bool PMonsterKilledRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PMonsterKilledRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MonsterID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monsterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PMonsterKilledRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PMonsterKilledRespond)
  return false;
#undef DO_
}

void PMonsterKilledRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PMonsterKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // int32 MonsterID = 2;
  if (this->monsterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->monsterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PMonsterKilledRespond)
}

::google::protobuf::uint8* PMonsterKilledRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PMonsterKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // int32 MonsterID = 2;
  if (this->monsterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->monsterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PMonsterKilledRespond)
  return target;
}

size_t PMonsterKilledRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PMonsterKilledRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // int32 MonsterID = 2;
  if (this->monsterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->monsterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PMonsterKilledRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PMonsterKilledRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PMonsterKilledRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PMonsterKilledRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PMonsterKilledRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PMonsterKilledRespond)
    MergeFrom(*source);
  }
}

void PMonsterKilledRespond::MergeFrom(const PMonsterKilledRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PMonsterKilledRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.monsterid() != 0) {
    set_monsterid(from.monsterid());
  }
}

void PMonsterKilledRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PMonsterKilledRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PMonsterKilledRespond::CopyFrom(const PMonsterKilledRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PMonsterKilledRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PMonsterKilledRespond::IsInitialized() const {
  return true;
}

void PMonsterKilledRespond::Swap(PMonsterKilledRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PMonsterKilledRespond::InternalSwap(PMonsterKilledRespond* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(monsterid_, other->monsterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PMonsterKilledRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PKilledRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKilledRequest::kOtherPlayerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKilledRequest::PKilledRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKilledRequest)
}
PKilledRequest::PKilledRequest(const PKilledRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  otherplayerid_ = from.otherplayerid_;
  // @@protoc_insertion_point(copy_constructor:PKilledRequest)
}

void PKilledRequest::SharedCtor() {
  otherplayerid_ = 0;
  _cached_size_ = 0;
}

PKilledRequest::~PKilledRequest() {
  // @@protoc_insertion_point(destructor:PKilledRequest)
  SharedDtor();
}

void PKilledRequest::SharedDtor() {
}

void PKilledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKilledRequest::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PKilledRequest& PKilledRequest::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRequest();
  return *internal_default_instance();
}

PKilledRequest* PKilledRequest::New(::google::protobuf::Arena* arena) const {
  PKilledRequest* n = new PKilledRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKilledRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  otherplayerid_ = 0;
  _internal_metadata_.Clear();
}

bool PKilledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKilledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 OtherPlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otherplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKilledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKilledRequest)
  return false;
#undef DO_
}

void PKilledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 OtherPlayerID = 1;
  if (this->otherplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->otherplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PKilledRequest)
}

::google::protobuf::uint8* PKilledRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PKilledRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 OtherPlayerID = 1;
  if (this->otherplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->otherplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKilledRequest)
  return target;
}

size_t PKilledRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PKilledRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 OtherPlayerID = 1;
  if (this->otherplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->otherplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKilledRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PKilledRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PKilledRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKilledRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PKilledRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PKilledRequest)
    MergeFrom(*source);
  }
}

void PKilledRequest::MergeFrom(const PKilledRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PKilledRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.otherplayerid() != 0) {
    set_otherplayerid(from.otherplayerid());
  }
}

void PKilledRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PKilledRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKilledRequest::CopyFrom(const PKilledRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PKilledRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PKilledRequest::IsInitialized() const {
  return true;
}

void PKilledRequest::Swap(PKilledRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKilledRequest::InternalSwap(PKilledRequest* other) {
  using std::swap;
  swap(otherplayerid_, other->otherplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKilledRequest::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PKilledRespond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKilledRespond::kDiedPlayerIDFieldNumber;
const int PKilledRespond::kKillerIDFieldNumber;
const int PKilledRespond::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKilledRespond::PKilledRespond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRespond();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKilledRespond)
}
PKilledRespond::PKilledRespond(const PKilledRespond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&diedplayerid_, &from.diedplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&diedplayerid_)) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:PKilledRespond)
}

void PKilledRespond::SharedCtor() {
  ::memset(&diedplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&diedplayerid_)) + sizeof(rank_));
  _cached_size_ = 0;
}

PKilledRespond::~PKilledRespond() {
  // @@protoc_insertion_point(destructor:PKilledRespond)
  SharedDtor();
}

void PKilledRespond::SharedDtor() {
}

void PKilledRespond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKilledRespond::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PKilledRespond& PKilledRespond::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRespond();
  return *internal_default_instance();
}

PKilledRespond* PKilledRespond::New(::google::protobuf::Arena* arena) const {
  PKilledRespond* n = new PKilledRespond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKilledRespond::Clear() {
// @@protoc_insertion_point(message_clear_start:PKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&diedplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&diedplayerid_)) + sizeof(rank_));
  _internal_metadata_.Clear();
}

bool PKilledRespond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKilledRespond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 DiedPlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diedplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 KillerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKilledRespond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKilledRespond)
  return false;
#undef DO_
}

void PKilledRespond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 DiedPlayerID = 1;
  if (this->diedplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->diedplayerid(), output);
  }

  // int32 KillerID = 2;
  if (this->killerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->killerid(), output);
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PKilledRespond)
}

::google::protobuf::uint8* PKilledRespond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PKilledRespond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 DiedPlayerID = 1;
  if (this->diedplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->diedplayerid(), target);
  }

  // int32 KillerID = 2;
  if (this->killerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->killerid(), target);
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKilledRespond)
  return target;
}

size_t PKilledRespond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PKilledRespond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 DiedPlayerID = 1;
  if (this->diedplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diedplayerid());
  }

  // int32 KillerID = 2;
  if (this->killerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killerid());
  }

  // int32 Rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKilledRespond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PKilledRespond)
  GOOGLE_DCHECK_NE(&from, this);
  const PKilledRespond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKilledRespond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PKilledRespond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PKilledRespond)
    MergeFrom(*source);
  }
}

void PKilledRespond::MergeFrom(const PKilledRespond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PKilledRespond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.diedplayerid() != 0) {
    set_diedplayerid(from.diedplayerid());
  }
  if (from.killerid() != 0) {
    set_killerid(from.killerid());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void PKilledRespond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PKilledRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKilledRespond::CopyFrom(const PKilledRespond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PKilledRespond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PKilledRespond::IsInitialized() const {
  return true;
}

void PKilledRespond::Swap(PKilledRespond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKilledRespond::InternalSwap(PKilledRespond* other) {
  using std::swap;
  swap(diedplayerid_, other->diedplayerid_);
  swap(killerid_, other->killerid_);
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKilledRespond::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PPlayerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPlayerInfo::PPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPlayerInfo)
}
PPlayerInfo::PPlayerInfo(const PPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PPlayerInfo)
}

void PPlayerInfo::SharedCtor() {
  _cached_size_ = 0;
}

PPlayerInfo::~PPlayerInfo() {
  // @@protoc_insertion_point(destructor:PPlayerInfo)
  SharedDtor();
}

void PPlayerInfo::SharedDtor() {
}

void PPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPlayerInfo::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PPlayerInfo& PPlayerInfo::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerInfo();
  return *internal_default_instance();
}

PPlayerInfo* PPlayerInfo::New(::google::protobuf::Arena* arena) const {
  PPlayerInfo* n = new PPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPlayerInfo)
  return false;
#undef DO_
}

void PPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PPlayerInfo)
}

::google::protobuf::uint8* PPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PPlayerInfo)
  return target;
}

size_t PPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PPlayerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPlayerInfo)
    MergeFrom(*source);
  }
}

void PPlayerInfo::MergeFrom(const PPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPlayerInfo::CopyFrom(const PPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPlayerInfo::IsInitialized() const {
  return true;
}

void PPlayerInfo::Swap(PPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPlayerInfo::InternalSwap(PPlayerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPlayerInfo::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PClientStep_Vec2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PClientStep_Vec2::kXFieldNumber;
const int PClientStep_Vec2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PClientStep_Vec2::PClientStep_Vec2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Vec2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PClientStep.Vec2)
}
PClientStep_Vec2::PClientStep_Vec2(const PClientStep_Vec2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:PClientStep.Vec2)
}

void PClientStep_Vec2::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

PClientStep_Vec2::~PClientStep_Vec2() {
  // @@protoc_insertion_point(destructor:PClientStep.Vec2)
  SharedDtor();
}

void PClientStep_Vec2::SharedDtor() {
}

void PClientStep_Vec2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PClientStep_Vec2::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PClientStep_Vec2& PClientStep_Vec2::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Vec2();
  return *internal_default_instance();
}

PClientStep_Vec2* PClientStep_Vec2::New(::google::protobuf::Arena* arena) const {
  PClientStep_Vec2* n = new PClientStep_Vec2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PClientStep_Vec2::Clear() {
// @@protoc_insertion_point(message_clear_start:PClientStep.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool PClientStep_Vec2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PClientStep.Vec2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PClientStep.Vec2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PClientStep.Vec2)
  return false;
#undef DO_
}

void PClientStep_Vec2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PClientStep.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PClientStep.Vec2)
}

::google::protobuf::uint8* PClientStep_Vec2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PClientStep.Vec2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PClientStep.Vec2)
  return target;
}

size_t PClientStep_Vec2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PClientStep.Vec2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float X = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PClientStep_Vec2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PClientStep.Vec2)
  GOOGLE_DCHECK_NE(&from, this);
  const PClientStep_Vec2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PClientStep_Vec2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PClientStep.Vec2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PClientStep.Vec2)
    MergeFrom(*source);
  }
}

void PClientStep_Vec2::MergeFrom(const PClientStep_Vec2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PClientStep.Vec2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void PClientStep_Vec2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PClientStep.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PClientStep_Vec2::CopyFrom(const PClientStep_Vec2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PClientStep.Vec2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PClientStep_Vec2::IsInitialized() const {
  return true;
}

void PClientStep_Vec2::Swap(PClientStep_Vec2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PClientStep_Vec2::InternalSwap(PClientStep_Vec2* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PClientStep_Vec2::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PClientStep_Action::InitAsDefaultInstance() {
  ::_PClientStep_Action_default_instance_._instance.get_mutable()->location_ = const_cast< ::PClientStep_Vec2*>(
      ::PClientStep_Vec2::internal_default_instance());
  ::_PClientStep_Action_default_instance_._instance.get_mutable()->target_ = const_cast< ::PClientStep_Vec2*>(
      ::PClientStep_Vec2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PClientStep_Action::kTypeFieldNumber;
const int PClientStep_Action::kLocationFieldNumber;
const int PClientStep_Action::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PClientStep_Action::PClientStep_Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Action();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PClientStep.Action)
}
PClientStep_Action::PClientStep_Action(const PClientStep_Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::PClientStep_Vec2(*from.location_);
  } else {
    location_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::PClientStep_Vec2(*from.target_);
  } else {
    target_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:PClientStep.Action)
}

void PClientStep_Action::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&location_)) + sizeof(type_));
  _cached_size_ = 0;
}

PClientStep_Action::~PClientStep_Action() {
  // @@protoc_insertion_point(destructor:PClientStep.Action)
  SharedDtor();
}

void PClientStep_Action::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete target_;
}

void PClientStep_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PClientStep_Action::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PClientStep_Action& PClientStep_Action::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Action();
  return *internal_default_instance();
}

PClientStep_Action* PClientStep_Action::New(::google::protobuf::Arena* arena) const {
  PClientStep_Action* n = new PClientStep_Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PClientStep_Action::Clear() {
// @@protoc_insertion_point(message_clear_start:PClientStep.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool PClientStep_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PClientStep.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PClientStep.Vec2 Location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PClientStep.Vec2 Target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PClientStep.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PClientStep.Action)
  return false;
#undef DO_
}

void PClientStep_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PClientStep.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // .PClientStep.Vec2 Location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->location_, output);
  }

  // .PClientStep.Vec2 Target = 3;
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->target_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PClientStep.Action)
}

::google::protobuf::uint8* PClientStep_Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PClientStep.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // .PClientStep.Vec2 Location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->location_, deterministic, target);
  }

  // .PClientStep.Vec2 Target = 3;
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->target_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PClientStep.Action)
  return target;
}

size_t PClientStep_Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PClientStep.Action)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PClientStep.Vec2 Location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->location_);
  }

  // .PClientStep.Vec2 Target = 3;
  if (this->has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_);
  }

  // int32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PClientStep_Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PClientStep.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const PClientStep_Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PClientStep_Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PClientStep.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PClientStep.Action)
    MergeFrom(*source);
  }
}

void PClientStep_Action::MergeFrom(const PClientStep_Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PClientStep.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location()) {
    mutable_location()->::PClientStep_Vec2::MergeFrom(from.location());
  }
  if (from.has_target()) {
    mutable_target()->::PClientStep_Vec2::MergeFrom(from.target());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PClientStep_Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PClientStep.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PClientStep_Action::CopyFrom(const PClientStep_Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PClientStep.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PClientStep_Action::IsInitialized() const {
  return true;
}

void PClientStep_Action::Swap(PClientStep_Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PClientStep_Action::InternalSwap(PClientStep_Action* other) {
  using std::swap;
  swap(location_, other->location_);
  swap(target_, other->target_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PClientStep_Action::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PClientStep::InitAsDefaultInstance() {
  ::_PClientStep_default_instance_._instance.get_mutable()->moveinthisstep_ = const_cast< ::PClientStep_Vec2*>(
      ::PClientStep_Vec2::internal_default_instance());
  ::_PClientStep_default_instance_._instance.get_mutable()->turninthisstep_ = const_cast< ::PClientStep_Vec2*>(
      ::PClientStep_Vec2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PClientStep::kStepIndexFieldNumber;
const int PClientStep::kMoveInThisStepFieldNumber;
const int PClientStep::kTurnInThisStepFieldNumber;
const int PClientStep::kActionsInThisStepFieldNumber;
const int PClientStep::kLastHealthInThisStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PClientStep::PClientStep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PClientStep)
}
PClientStep::PClientStep(const PClientStep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      actionsinthisstep_(from.actionsinthisstep_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_moveinthisstep()) {
    moveinthisstep_ = new ::PClientStep_Vec2(*from.moveinthisstep_);
  } else {
    moveinthisstep_ = NULL;
  }
  if (from.has_turninthisstep()) {
    turninthisstep_ = new ::PClientStep_Vec2(*from.turninthisstep_);
  } else {
    turninthisstep_ = NULL;
  }
  ::memcpy(&stepindex_, &from.stepindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&lasthealthinthisstep_) -
    reinterpret_cast<char*>(&stepindex_)) + sizeof(lasthealthinthisstep_));
  // @@protoc_insertion_point(copy_constructor:PClientStep)
}

void PClientStep::SharedCtor() {
  ::memset(&moveinthisstep_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lasthealthinthisstep_) -
      reinterpret_cast<char*>(&moveinthisstep_)) + sizeof(lasthealthinthisstep_));
  _cached_size_ = 0;
}

PClientStep::~PClientStep() {
  // @@protoc_insertion_point(destructor:PClientStep)
  SharedDtor();
}

void PClientStep::SharedDtor() {
  if (this != internal_default_instance()) delete moveinthisstep_;
  if (this != internal_default_instance()) delete turninthisstep_;
}

void PClientStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PClientStep::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PClientStep& PClientStep::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep();
  return *internal_default_instance();
}

PClientStep* PClientStep::New(::google::protobuf::Arena* arena) const {
  PClientStep* n = new PClientStep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PClientStep::Clear() {
// @@protoc_insertion_point(message_clear_start:PClientStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actionsinthisstep_.Clear();
  if (GetArenaNoVirtual() == NULL && moveinthisstep_ != NULL) {
    delete moveinthisstep_;
  }
  moveinthisstep_ = NULL;
  if (GetArenaNoVirtual() == NULL && turninthisstep_ != NULL) {
    delete turninthisstep_;
  }
  turninthisstep_ = NULL;
  ::memset(&stepindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lasthealthinthisstep_) -
      reinterpret_cast<char*>(&stepindex_)) + sizeof(lasthealthinthisstep_));
  _internal_metadata_.Clear();
}

bool PClientStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PClientStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 StepIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stepindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PClientStep.Vec2 MoveInThisStep = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_moveinthisstep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PClientStep.Vec2 TurnInThisStep = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_turninthisstep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PClientStep.Action ActionsInThisStep = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_actionsinthisstep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LastHealthInThisStep = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lasthealthinthisstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PClientStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PClientStep)
  return false;
#undef DO_
}

void PClientStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PClientStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stepindex(), output);
  }

  // .PClientStep.Vec2 MoveInThisStep = 2;
  if (this->has_moveinthisstep()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->moveinthisstep_, output);
  }

  // .PClientStep.Vec2 TurnInThisStep = 3;
  if (this->has_turninthisstep()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->turninthisstep_, output);
  }

  // repeated .PClientStep.Action ActionsInThisStep = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actionsinthisstep_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->actionsinthisstep(static_cast<int>(i)), output);
  }

  // float LastHealthInThisStep = 5;
  if (this->lasthealthinthisstep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->lasthealthinthisstep(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PClientStep)
}

::google::protobuf::uint8* PClientStep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PClientStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stepindex(), target);
  }

  // .PClientStep.Vec2 MoveInThisStep = 2;
  if (this->has_moveinthisstep()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->moveinthisstep_, deterministic, target);
  }

  // .PClientStep.Vec2 TurnInThisStep = 3;
  if (this->has_turninthisstep()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->turninthisstep_, deterministic, target);
  }

  // repeated .PClientStep.Action ActionsInThisStep = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actionsinthisstep_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->actionsinthisstep(static_cast<int>(i)), deterministic, target);
  }

  // float LastHealthInThisStep = 5;
  if (this->lasthealthinthisstep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->lasthealthinthisstep(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PClientStep)
  return target;
}

size_t PClientStep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PClientStep)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PClientStep.Action ActionsInThisStep = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->actionsinthisstep_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actionsinthisstep(static_cast<int>(i)));
    }
  }

  // .PClientStep.Vec2 MoveInThisStep = 2;
  if (this->has_moveinthisstep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->moveinthisstep_);
  }

  // .PClientStep.Vec2 TurnInThisStep = 3;
  if (this->has_turninthisstep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->turninthisstep_);
  }

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stepindex());
  }

  // float LastHealthInThisStep = 5;
  if (this->lasthealthinthisstep() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PClientStep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PClientStep)
  GOOGLE_DCHECK_NE(&from, this);
  const PClientStep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PClientStep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PClientStep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PClientStep)
    MergeFrom(*source);
  }
}

void PClientStep::MergeFrom(const PClientStep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PClientStep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actionsinthisstep_.MergeFrom(from.actionsinthisstep_);
  if (from.has_moveinthisstep()) {
    mutable_moveinthisstep()->::PClientStep_Vec2::MergeFrom(from.moveinthisstep());
  }
  if (from.has_turninthisstep()) {
    mutable_turninthisstep()->::PClientStep_Vec2::MergeFrom(from.turninthisstep());
  }
  if (from.stepindex() != 0) {
    set_stepindex(from.stepindex());
  }
  if (from.lasthealthinthisstep() != 0) {
    set_lasthealthinthisstep(from.lasthealthinthisstep());
  }
}

void PClientStep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PClientStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PClientStep::CopyFrom(const PClientStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PClientStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PClientStep::IsInitialized() const {
  return true;
}

void PClientStep::Swap(PClientStep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PClientStep::InternalSwap(PClientStep* other) {
  using std::swap;
  actionsinthisstep_.InternalSwap(&other->actionsinthisstep_);
  swap(moveinthisstep_, other->moveinthisstep_);
  swap(turninthisstep_, other->turninthisstep_);
  swap(stepindex_, other->stepindex_);
  swap(lasthealthinthisstep_, other->lasthealthinthisstep_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PClientStep::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PServerStep_Client::InitAsDefaultInstance() {
  ::_PServerStep_Client_default_instance_._instance.get_mutable()->step_ = const_cast< ::PClientStep*>(
      ::PClientStep::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PServerStep_Client::kPlayerIDFieldNumber;
const int PServerStep_Client::kIsEmptyFieldNumber;
const int PServerStep_Client::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PServerStep_Client::PServerStep_Client()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPServerStep_Client();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PServerStep.Client)
}
PServerStep_Client::PServerStep_Client(const PServerStep_Client& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_step()) {
    step_ = new ::PClientStep(*from.step_);
  } else {
    step_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isempty_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(isempty_));
  // @@protoc_insertion_point(copy_constructor:PServerStep.Client)
}

void PServerStep_Client::SharedCtor() {
  ::memset(&step_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isempty_) -
      reinterpret_cast<char*>(&step_)) + sizeof(isempty_));
  _cached_size_ = 0;
}

PServerStep_Client::~PServerStep_Client() {
  // @@protoc_insertion_point(destructor:PServerStep.Client)
  SharedDtor();
}

void PServerStep_Client::SharedDtor() {
  if (this != internal_default_instance()) delete step_;
}

void PServerStep_Client::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PServerStep_Client::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PServerStep_Client& PServerStep_Client::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPServerStep_Client();
  return *internal_default_instance();
}

PServerStep_Client* PServerStep_Client::New(::google::protobuf::Arena* arena) const {
  PServerStep_Client* n = new PServerStep_Client;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PServerStep_Client::Clear() {
// @@protoc_insertion_point(message_clear_start:PServerStep.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && step_ != NULL) {
    delete step_;
  }
  step_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isempty_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(isempty_));
  _internal_metadata_.Clear();
}

bool PServerStep_Client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PServerStep.Client)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IsEmpty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isempty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PClientStep Step = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_step()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PServerStep.Client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PServerStep.Client)
  return false;
#undef DO_
}

void PServerStep_Client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PServerStep.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // int32 IsEmpty = 2;
  if (this->isempty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isempty(), output);
  }

  // .PClientStep Step = 3;
  if (this->has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->step_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PServerStep.Client)
}

::google::protobuf::uint8* PServerStep_Client::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PServerStep.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // int32 IsEmpty = 2;
  if (this->isempty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isempty(), target);
  }

  // .PClientStep Step = 3;
  if (this->has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->step_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PServerStep.Client)
  return target;
}

size_t PServerStep_Client::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PServerStep.Client)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PClientStep Step = 3;
  if (this->has_step()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->step_);
  }

  // int32 PlayerID = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  // int32 IsEmpty = 2;
  if (this->isempty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isempty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PServerStep_Client::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PServerStep.Client)
  GOOGLE_DCHECK_NE(&from, this);
  const PServerStep_Client* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PServerStep_Client>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PServerStep.Client)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PServerStep.Client)
    MergeFrom(*source);
  }
}

void PServerStep_Client::MergeFrom(const PServerStep_Client& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PServerStep.Client)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_step()) {
    mutable_step()->::PClientStep::MergeFrom(from.step());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.isempty() != 0) {
    set_isempty(from.isempty());
  }
}

void PServerStep_Client::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PServerStep.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PServerStep_Client::CopyFrom(const PServerStep_Client& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PServerStep.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PServerStep_Client::IsInitialized() const {
  return true;
}

void PServerStep_Client::Swap(PServerStep_Client* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PServerStep_Client::InternalSwap(PServerStep_Client* other) {
  using std::swap;
  swap(step_, other->step_);
  swap(playerid_, other->playerid_);
  swap(isempty_, other->isempty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PServerStep_Client::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PServerStep::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PServerStep::kStepIndexFieldNumber;
const int PServerStep::kAllClientsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PServerStep::PServerStep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessage_2eproto::InitDefaultsPServerStep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PServerStep)
}
PServerStep::PServerStep(const PServerStep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allclients_(from.allclients_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stepindex_ = from.stepindex_;
  // @@protoc_insertion_point(copy_constructor:PServerStep)
}

void PServerStep::SharedCtor() {
  stepindex_ = 0;
  _cached_size_ = 0;
}

PServerStep::~PServerStep() {
  // @@protoc_insertion_point(destructor:PServerStep)
  SharedDtor();
}

void PServerStep::SharedDtor() {
}

void PServerStep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PServerStep::descriptor() {
  ::protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PServerStep& PServerStep::default_instance() {
  ::protobuf_GameMessage_2eproto::InitDefaultsPServerStep();
  return *internal_default_instance();
}

PServerStep* PServerStep::New(::google::protobuf::Arena* arena) const {
  PServerStep* n = new PServerStep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PServerStep::Clear() {
// @@protoc_insertion_point(message_clear_start:PServerStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allclients_.Clear();
  stepindex_ = 0;
  _internal_metadata_.Clear();
}

bool PServerStep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PServerStep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 StepIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stepindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PServerStep.Client AllClients = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_allclients()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PServerStep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PServerStep)
  return false;
#undef DO_
}

void PServerStep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PServerStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stepindex(), output);
  }

  // repeated .PServerStep.Client AllClients = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allclients_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->allclients(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PServerStep)
}

::google::protobuf::uint8* PServerStep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PServerStep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stepindex(), target);
  }

  // repeated .PServerStep.Client AllClients = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allclients_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->allclients(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PServerStep)
  return target;
}

size_t PServerStep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PServerStep)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PServerStep.Client AllClients = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->allclients_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->allclients(static_cast<int>(i)));
    }
  }

  // int32 StepIndex = 1;
  if (this->stepindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stepindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PServerStep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PServerStep)
  GOOGLE_DCHECK_NE(&from, this);
  const PServerStep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PServerStep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PServerStep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PServerStep)
    MergeFrom(*source);
  }
}

void PServerStep::MergeFrom(const PServerStep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PServerStep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allclients_.MergeFrom(from.allclients_);
  if (from.stepindex() != 0) {
    set_stepindex(from.stepindex());
  }
}

void PServerStep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PServerStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PServerStep::CopyFrom(const PServerStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PServerStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PServerStep::IsInitialized() const {
  return true;
}

void PServerStep::Swap(PServerStep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PServerStep::InternalSwap(PServerStep* other) {
  using std::swap;
  allclients_.InternalSwap(&other->allclients_);
  swap(stepindex_, other->stepindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PServerStep::GetMetadata() const {
  protobuf_GameMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
