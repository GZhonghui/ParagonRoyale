// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#ifndef PROTOBUF_GameMessage_2eproto__INCLUDED
#define PROTOBUF_GameMessage_2eproto__INCLUDED

#pragma warning(disable:4125)

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_GameMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[27];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPRegisterRequestImpl();
void InitDefaultsPRegisterRequest();
void InitDefaultsPRegisterRespondImpl();
void InitDefaultsPRegisterRespond();
void InitDefaultsPLoginRequestImpl();
void InitDefaultsPLoginRequest();
void InitDefaultsPLoginRespondImpl();
void InitDefaultsPLoginRespond();
void InitDefaultsPMatchRequestImpl();
void InitDefaultsPMatchRequest();
void InitDefaultsPMatchFoundRespond_POtherPlayerInfoImpl();
void InitDefaultsPMatchFoundRespond_POtherPlayerInfo();
void InitDefaultsPMatchFoundRespondImpl();
void InitDefaultsPMatchFoundRespond();
void InitDefaultsPPlayerMoveRequestImpl();
void InitDefaultsPPlayerMoveRequest();
void InitDefaultsPPlayerMoveRespondImpl();
void InitDefaultsPPlayerMoveRespond();
void InitDefaultsPPlayerTurnRequestImpl();
void InitDefaultsPPlayerTurnRequest();
void InitDefaultsPPlayerTurnRespondImpl();
void InitDefaultsPPlayerTurnRespond();
void InitDefaultsPPlayerHealthRequestImpl();
void InitDefaultsPPlayerHealthRequest();
void InitDefaultsPPlayerHealthRespondImpl();
void InitDefaultsPPlayerHealthRespond();
void InitDefaultsPPlayerActionRequestImpl();
void InitDefaultsPPlayerActionRequest();
void InitDefaultsPPlayerActionRespondImpl();
void InitDefaultsPPlayerActionRespond();
void InitDefaultsPPlayerBuffRequestImpl();
void InitDefaultsPPlayerBuffRequest();
void InitDefaultsPPlayerBuffRespondImpl();
void InitDefaultsPPlayerBuffRespond();
void InitDefaultsPMonsterKilledRequestImpl();
void InitDefaultsPMonsterKilledRequest();
void InitDefaultsPMonsterKilledRespondImpl();
void InitDefaultsPMonsterKilledRespond();
void InitDefaultsPKilledRequestImpl();
void InitDefaultsPKilledRequest();
void InitDefaultsPKilledRespondImpl();
void InitDefaultsPKilledRespond();
void InitDefaultsPPlayerInfoImpl();
void InitDefaultsPPlayerInfo();
void InitDefaultsPClientStep_Vec2Impl();
void InitDefaultsPClientStep_Vec2();
void InitDefaultsPClientStep_ActionImpl();
void InitDefaultsPClientStep_Action();
void InitDefaultsPClientStepImpl();
void InitDefaultsPClientStep();
void InitDefaultsPServerStep_ClientImpl();
void InitDefaultsPServerStep_Client();
void InitDefaultsPServerStepImpl();
void InitDefaultsPServerStep();
inline void InitDefaults() {
  InitDefaultsPRegisterRequest();
  InitDefaultsPRegisterRespond();
  InitDefaultsPLoginRequest();
  InitDefaultsPLoginRespond();
  InitDefaultsPMatchRequest();
  InitDefaultsPMatchFoundRespond_POtherPlayerInfo();
  InitDefaultsPMatchFoundRespond();
  InitDefaultsPPlayerMoveRequest();
  InitDefaultsPPlayerMoveRespond();
  InitDefaultsPPlayerTurnRequest();
  InitDefaultsPPlayerTurnRespond();
  InitDefaultsPPlayerHealthRequest();
  InitDefaultsPPlayerHealthRespond();
  InitDefaultsPPlayerActionRequest();
  InitDefaultsPPlayerActionRespond();
  InitDefaultsPPlayerBuffRequest();
  InitDefaultsPPlayerBuffRespond();
  InitDefaultsPMonsterKilledRequest();
  InitDefaultsPMonsterKilledRespond();
  InitDefaultsPKilledRequest();
  InitDefaultsPKilledRespond();
  InitDefaultsPPlayerInfo();
  InitDefaultsPClientStep_Vec2();
  InitDefaultsPClientStep_Action();
  InitDefaultsPClientStep();
  InitDefaultsPServerStep_Client();
  InitDefaultsPServerStep();
}
}  // namespace protobuf_GameMessage_2eproto
class PClientStep;
class PClientStepDefaultTypeInternal;
extern PClientStepDefaultTypeInternal _PClientStep_default_instance_;
class PClientStep_Action;
class PClientStep_ActionDefaultTypeInternal;
extern PClientStep_ActionDefaultTypeInternal _PClientStep_Action_default_instance_;
class PClientStep_Vec2;
class PClientStep_Vec2DefaultTypeInternal;
extern PClientStep_Vec2DefaultTypeInternal _PClientStep_Vec2_default_instance_;
class PKilledRequest;
class PKilledRequestDefaultTypeInternal;
extern PKilledRequestDefaultTypeInternal _PKilledRequest_default_instance_;
class PKilledRespond;
class PKilledRespondDefaultTypeInternal;
extern PKilledRespondDefaultTypeInternal _PKilledRespond_default_instance_;
class PLoginRequest;
class PLoginRequestDefaultTypeInternal;
extern PLoginRequestDefaultTypeInternal _PLoginRequest_default_instance_;
class PLoginRespond;
class PLoginRespondDefaultTypeInternal;
extern PLoginRespondDefaultTypeInternal _PLoginRespond_default_instance_;
class PMatchFoundRespond;
class PMatchFoundRespondDefaultTypeInternal;
extern PMatchFoundRespondDefaultTypeInternal _PMatchFoundRespond_default_instance_;
class PMatchFoundRespond_POtherPlayerInfo;
class PMatchFoundRespond_POtherPlayerInfoDefaultTypeInternal;
extern PMatchFoundRespond_POtherPlayerInfoDefaultTypeInternal _PMatchFoundRespond_POtherPlayerInfo_default_instance_;
class PMatchRequest;
class PMatchRequestDefaultTypeInternal;
extern PMatchRequestDefaultTypeInternal _PMatchRequest_default_instance_;
class PMonsterKilledRequest;
class PMonsterKilledRequestDefaultTypeInternal;
extern PMonsterKilledRequestDefaultTypeInternal _PMonsterKilledRequest_default_instance_;
class PMonsterKilledRespond;
class PMonsterKilledRespondDefaultTypeInternal;
extern PMonsterKilledRespondDefaultTypeInternal _PMonsterKilledRespond_default_instance_;
class PPlayerActionRequest;
class PPlayerActionRequestDefaultTypeInternal;
extern PPlayerActionRequestDefaultTypeInternal _PPlayerActionRequest_default_instance_;
class PPlayerActionRespond;
class PPlayerActionRespondDefaultTypeInternal;
extern PPlayerActionRespondDefaultTypeInternal _PPlayerActionRespond_default_instance_;
class PPlayerBuffRequest;
class PPlayerBuffRequestDefaultTypeInternal;
extern PPlayerBuffRequestDefaultTypeInternal _PPlayerBuffRequest_default_instance_;
class PPlayerBuffRespond;
class PPlayerBuffRespondDefaultTypeInternal;
extern PPlayerBuffRespondDefaultTypeInternal _PPlayerBuffRespond_default_instance_;
class PPlayerHealthRequest;
class PPlayerHealthRequestDefaultTypeInternal;
extern PPlayerHealthRequestDefaultTypeInternal _PPlayerHealthRequest_default_instance_;
class PPlayerHealthRespond;
class PPlayerHealthRespondDefaultTypeInternal;
extern PPlayerHealthRespondDefaultTypeInternal _PPlayerHealthRespond_default_instance_;
class PPlayerInfo;
class PPlayerInfoDefaultTypeInternal;
extern PPlayerInfoDefaultTypeInternal _PPlayerInfo_default_instance_;
class PPlayerMoveRequest;
class PPlayerMoveRequestDefaultTypeInternal;
extern PPlayerMoveRequestDefaultTypeInternal _PPlayerMoveRequest_default_instance_;
class PPlayerMoveRespond;
class PPlayerMoveRespondDefaultTypeInternal;
extern PPlayerMoveRespondDefaultTypeInternal _PPlayerMoveRespond_default_instance_;
class PPlayerTurnRequest;
class PPlayerTurnRequestDefaultTypeInternal;
extern PPlayerTurnRequestDefaultTypeInternal _PPlayerTurnRequest_default_instance_;
class PPlayerTurnRespond;
class PPlayerTurnRespondDefaultTypeInternal;
extern PPlayerTurnRespondDefaultTypeInternal _PPlayerTurnRespond_default_instance_;
class PRegisterRequest;
class PRegisterRequestDefaultTypeInternal;
extern PRegisterRequestDefaultTypeInternal _PRegisterRequest_default_instance_;
class PRegisterRespond;
class PRegisterRespondDefaultTypeInternal;
extern PRegisterRespondDefaultTypeInternal _PRegisterRespond_default_instance_;
class PServerStep;
class PServerStepDefaultTypeInternal;
extern PServerStepDefaultTypeInternal _PServerStep_default_instance_;
class PServerStep_Client;
class PServerStep_ClientDefaultTypeInternal;
extern PServerStep_ClientDefaultTypeInternal _PServerStep_Client_default_instance_;

// ===================================================================

class PRegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PRegisterRequest) */ {
 public:
  PRegisterRequest();
  virtual ~PRegisterRequest();

  PRegisterRequest(const PRegisterRequest& from);

  inline PRegisterRequest& operator=(const PRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PRegisterRequest(PRegisterRequest&& from) noexcept
    : PRegisterRequest() {
    *this = ::std::move(from);
  }

  inline PRegisterRequest& operator=(PRegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PRegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PRegisterRequest* internal_default_instance() {
    return reinterpret_cast<const PRegisterRequest*>(
               &_PRegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PRegisterRequest* other);
  friend void swap(PRegisterRequest& a, PRegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PRegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PRegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PRegisterRequest& from);
  void MergeFrom(const PRegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PRegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserName = 1;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string PassWord = 2;
  void clear_password();
  static const int kPassWordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:PRegisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRequestImpl();
};
// -------------------------------------------------------------------

class PRegisterRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PRegisterRespond) */ {
 public:
  PRegisterRespond();
  virtual ~PRegisterRespond();

  PRegisterRespond(const PRegisterRespond& from);

  inline PRegisterRespond& operator=(const PRegisterRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PRegisterRespond(PRegisterRespond&& from) noexcept
    : PRegisterRespond() {
    *this = ::std::move(from);
  }

  inline PRegisterRespond& operator=(PRegisterRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PRegisterRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PRegisterRespond* internal_default_instance() {
    return reinterpret_cast<const PRegisterRespond*>(
               &_PRegisterRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PRegisterRespond* other);
  friend void swap(PRegisterRespond& a, PRegisterRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PRegisterRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PRegisterRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PRegisterRespond& from);
  void MergeFrom(const PRegisterRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PRegisterRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  ::google::protobuf::int32 success() const;
  void set_success(::google::protobuf::int32 value);

  // int32 ErrorCode = 2;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PRegisterRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 success_;
  ::google::protobuf::int32 errorcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPRegisterRespondImpl();
};
// -------------------------------------------------------------------

class PLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PLoginRequest) */ {
 public:
  PLoginRequest();
  virtual ~PLoginRequest();

  PLoginRequest(const PLoginRequest& from);

  inline PLoginRequest& operator=(const PLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PLoginRequest(PLoginRequest&& from) noexcept
    : PLoginRequest() {
    *this = ::std::move(from);
  }

  inline PLoginRequest& operator=(PLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PLoginRequest* internal_default_instance() {
    return reinterpret_cast<const PLoginRequest*>(
               &_PLoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PLoginRequest* other);
  friend void swap(PLoginRequest& a, PLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PLoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PLoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PLoginRequest& from);
  void MergeFrom(const PLoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserName = 1;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string PassWord = 2;
  void clear_password();
  static const int kPassWordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:PLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRequestImpl();
};
// -------------------------------------------------------------------

class PLoginRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PLoginRespond) */ {
 public:
  PLoginRespond();
  virtual ~PLoginRespond();

  PLoginRespond(const PLoginRespond& from);

  inline PLoginRespond& operator=(const PLoginRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PLoginRespond(PLoginRespond&& from) noexcept
    : PLoginRespond() {
    *this = ::std::move(from);
  }

  inline PLoginRespond& operator=(PLoginRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PLoginRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PLoginRespond* internal_default_instance() {
    return reinterpret_cast<const PLoginRespond*>(
               &_PLoginRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PLoginRespond* other);
  friend void swap(PLoginRespond& a, PLoginRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PLoginRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PLoginRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PLoginRespond& from);
  void MergeFrom(const PLoginRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PLoginRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 Success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  ::google::protobuf::int32 success() const;
  void set_success(::google::protobuf::int32 value);

  // int32 ErrorCode = 2;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PLoginRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 success_;
  ::google::protobuf::int32 errorcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPLoginRespondImpl();
};
// -------------------------------------------------------------------

class PMatchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMatchRequest) */ {
 public:
  PMatchRequest();
  virtual ~PMatchRequest();

  PMatchRequest(const PMatchRequest& from);

  inline PMatchRequest& operator=(const PMatchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMatchRequest(PMatchRequest&& from) noexcept
    : PMatchRequest() {
    *this = ::std::move(from);
  }

  inline PMatchRequest& operator=(PMatchRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMatchRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMatchRequest* internal_default_instance() {
    return reinterpret_cast<const PMatchRequest*>(
               &_PMatchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PMatchRequest* other);
  friend void swap(PMatchRequest& a, PMatchRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMatchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PMatchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMatchRequest& from);
  void MergeFrom(const PMatchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMatchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserName = 3;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // int32 HeroID = 1;
  void clear_heroid();
  static const int kHeroIDFieldNumber = 1;
  ::google::protobuf::int32 heroid() const;
  void set_heroid(::google::protobuf::int32 value);

  // int32 SkinID = 2;
  void clear_skinid();
  static const int kSkinIDFieldNumber = 2;
  ::google::protobuf::int32 skinid() const;
  void set_skinid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PMatchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 skinid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMatchRequestImpl();
};
// -------------------------------------------------------------------

class PMatchFoundRespond_POtherPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMatchFoundRespond.POtherPlayerInfo) */ {
 public:
  PMatchFoundRespond_POtherPlayerInfo();
  virtual ~PMatchFoundRespond_POtherPlayerInfo();

  PMatchFoundRespond_POtherPlayerInfo(const PMatchFoundRespond_POtherPlayerInfo& from);

  inline PMatchFoundRespond_POtherPlayerInfo& operator=(const PMatchFoundRespond_POtherPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMatchFoundRespond_POtherPlayerInfo(PMatchFoundRespond_POtherPlayerInfo&& from) noexcept
    : PMatchFoundRespond_POtherPlayerInfo() {
    *this = ::std::move(from);
  }

  inline PMatchFoundRespond_POtherPlayerInfo& operator=(PMatchFoundRespond_POtherPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMatchFoundRespond_POtherPlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMatchFoundRespond_POtherPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PMatchFoundRespond_POtherPlayerInfo*>(
               &_PMatchFoundRespond_POtherPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PMatchFoundRespond_POtherPlayerInfo* other);
  friend void swap(PMatchFoundRespond_POtherPlayerInfo& a, PMatchFoundRespond_POtherPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMatchFoundRespond_POtherPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PMatchFoundRespond_POtherPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMatchFoundRespond_POtherPlayerInfo& from);
  void MergeFrom(const PMatchFoundRespond_POtherPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMatchFoundRespond_POtherPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string PlayerName = 2;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 HeroID = 3;
  void clear_heroid();
  static const int kHeroIDFieldNumber = 3;
  ::google::protobuf::int32 heroid() const;
  void set_heroid(::google::protobuf::int32 value);

  // int32 SkinID = 4;
  void clear_skinid();
  static const int kSkinIDFieldNumber = 4;
  ::google::protobuf::int32 skinid() const;
  void set_skinid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PMatchFoundRespond.POtherPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 heroid_;
  ::google::protobuf::int32 skinid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespond_POtherPlayerInfoImpl();
};
// -------------------------------------------------------------------

class PMatchFoundRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMatchFoundRespond) */ {
 public:
  PMatchFoundRespond();
  virtual ~PMatchFoundRespond();

  PMatchFoundRespond(const PMatchFoundRespond& from);

  inline PMatchFoundRespond& operator=(const PMatchFoundRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMatchFoundRespond(PMatchFoundRespond&& from) noexcept
    : PMatchFoundRespond() {
    *this = ::std::move(from);
  }

  inline PMatchFoundRespond& operator=(PMatchFoundRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMatchFoundRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMatchFoundRespond* internal_default_instance() {
    return reinterpret_cast<const PMatchFoundRespond*>(
               &_PMatchFoundRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PMatchFoundRespond* other);
  friend void swap(PMatchFoundRespond& a, PMatchFoundRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMatchFoundRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PMatchFoundRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMatchFoundRespond& from);
  void MergeFrom(const PMatchFoundRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMatchFoundRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PMatchFoundRespond_POtherPlayerInfo POtherPlayerInfo;

  // accessors -------------------------------------------------------

  // repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
  int otherplayers_size() const;
  void clear_otherplayers();
  static const int kOtherPlayersFieldNumber = 2;
  const ::PMatchFoundRespond_POtherPlayerInfo& otherplayers(int index) const;
  ::PMatchFoundRespond_POtherPlayerInfo* mutable_otherplayers(int index);
  ::PMatchFoundRespond_POtherPlayerInfo* add_otherplayers();
  ::google::protobuf::RepeatedPtrField< ::PMatchFoundRespond_POtherPlayerInfo >*
      mutable_otherplayers();
  const ::google::protobuf::RepeatedPtrField< ::PMatchFoundRespond_POtherPlayerInfo >&
      otherplayers() const;

  // int32 RandomSeed = 1;
  void clear_randomseed();
  static const int kRandomSeedFieldNumber = 1;
  ::google::protobuf::int32 randomseed() const;
  void set_randomseed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PMatchFoundRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PMatchFoundRespond_POtherPlayerInfo > otherplayers_;
  ::google::protobuf::int32 randomseed_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMatchFoundRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerMoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerMoveRequest) */ {
 public:
  PPlayerMoveRequest();
  virtual ~PPlayerMoveRequest();

  PPlayerMoveRequest(const PPlayerMoveRequest& from);

  inline PPlayerMoveRequest& operator=(const PPlayerMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerMoveRequest(PPlayerMoveRequest&& from) noexcept
    : PPlayerMoveRequest() {
    *this = ::std::move(from);
  }

  inline PPlayerMoveRequest& operator=(PPlayerMoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerMoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerMoveRequest* internal_default_instance() {
    return reinterpret_cast<const PPlayerMoveRequest*>(
               &_PPlayerMoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PPlayerMoveRequest* other);
  friend void swap(PPlayerMoveRequest& a, PPlayerMoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerMoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerMoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerMoveRequest& from);
  void MergeFrom(const PPlayerMoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerMoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PPlayerMoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerMoveRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerMoveRespond) */ {
 public:
  PPlayerMoveRespond();
  virtual ~PPlayerMoveRespond();

  PPlayerMoveRespond(const PPlayerMoveRespond& from);

  inline PPlayerMoveRespond& operator=(const PPlayerMoveRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerMoveRespond(PPlayerMoveRespond&& from) noexcept
    : PPlayerMoveRespond() {
    *this = ::std::move(from);
  }

  inline PPlayerMoveRespond& operator=(PPlayerMoveRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerMoveRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerMoveRespond* internal_default_instance() {
    return reinterpret_cast<const PPlayerMoveRespond*>(
               &_PPlayerMoveRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PPlayerMoveRespond* other);
  friend void swap(PPlayerMoveRespond& a, PPlayerMoveRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerMoveRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerMoveRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerMoveRespond& from);
  void MergeFrom(const PPlayerMoveRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerMoveRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // float X = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float Y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PPlayerMoveRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerMoveRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerTurnRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerTurnRequest) */ {
 public:
  PPlayerTurnRequest();
  virtual ~PPlayerTurnRequest();

  PPlayerTurnRequest(const PPlayerTurnRequest& from);

  inline PPlayerTurnRequest& operator=(const PPlayerTurnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerTurnRequest(PPlayerTurnRequest&& from) noexcept
    : PPlayerTurnRequest() {
    *this = ::std::move(from);
  }

  inline PPlayerTurnRequest& operator=(PPlayerTurnRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerTurnRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerTurnRequest* internal_default_instance() {
    return reinterpret_cast<const PPlayerTurnRequest*>(
               &_PPlayerTurnRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PPlayerTurnRequest* other);
  friend void swap(PPlayerTurnRequest& a, PPlayerTurnRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerTurnRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerTurnRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerTurnRequest& from);
  void MergeFrom(const PPlayerTurnRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerTurnRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PPlayerTurnRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerTurnRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerTurnRespond) */ {
 public:
  PPlayerTurnRespond();
  virtual ~PPlayerTurnRespond();

  PPlayerTurnRespond(const PPlayerTurnRespond& from);

  inline PPlayerTurnRespond& operator=(const PPlayerTurnRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerTurnRespond(PPlayerTurnRespond&& from) noexcept
    : PPlayerTurnRespond() {
    *this = ::std::move(from);
  }

  inline PPlayerTurnRespond& operator=(PPlayerTurnRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerTurnRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerTurnRespond* internal_default_instance() {
    return reinterpret_cast<const PPlayerTurnRespond*>(
               &_PPlayerTurnRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PPlayerTurnRespond* other);
  friend void swap(PPlayerTurnRespond& a, PPlayerTurnRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerTurnRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerTurnRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerTurnRespond& from);
  void MergeFrom(const PPlayerTurnRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerTurnRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // float X = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float Y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PPlayerTurnRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerTurnRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerHealthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerHealthRequest) */ {
 public:
  PPlayerHealthRequest();
  virtual ~PPlayerHealthRequest();

  PPlayerHealthRequest(const PPlayerHealthRequest& from);

  inline PPlayerHealthRequest& operator=(const PPlayerHealthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerHealthRequest(PPlayerHealthRequest&& from) noexcept
    : PPlayerHealthRequest() {
    *this = ::std::move(from);
  }

  inline PPlayerHealthRequest& operator=(PPlayerHealthRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerHealthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerHealthRequest* internal_default_instance() {
    return reinterpret_cast<const PPlayerHealthRequest*>(
               &_PPlayerHealthRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PPlayerHealthRequest* other);
  friend void swap(PPlayerHealthRequest& a, PPlayerHealthRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerHealthRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerHealthRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerHealthRequest& from);
  void MergeFrom(const PPlayerHealthRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerHealthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float HealthMax = 1;
  void clear_healthmax();
  static const int kHealthMaxFieldNumber = 1;
  float healthmax() const;
  void set_healthmax(float value);

  // float HealthRemain = 2;
  void clear_healthremain();
  static const int kHealthRemainFieldNumber = 2;
  float healthremain() const;
  void set_healthremain(float value);

  // @@protoc_insertion_point(class_scope:PPlayerHealthRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float healthmax_;
  float healthremain_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerHealthRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerHealthRespond) */ {
 public:
  PPlayerHealthRespond();
  virtual ~PPlayerHealthRespond();

  PPlayerHealthRespond(const PPlayerHealthRespond& from);

  inline PPlayerHealthRespond& operator=(const PPlayerHealthRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerHealthRespond(PPlayerHealthRespond&& from) noexcept
    : PPlayerHealthRespond() {
    *this = ::std::move(from);
  }

  inline PPlayerHealthRespond& operator=(PPlayerHealthRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerHealthRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerHealthRespond* internal_default_instance() {
    return reinterpret_cast<const PPlayerHealthRespond*>(
               &_PPlayerHealthRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PPlayerHealthRespond* other);
  friend void swap(PPlayerHealthRespond& a, PPlayerHealthRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerHealthRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerHealthRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerHealthRespond& from);
  void MergeFrom(const PPlayerHealthRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerHealthRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // float HealthMax = 2;
  void clear_healthmax();
  static const int kHealthMaxFieldNumber = 2;
  float healthmax() const;
  void set_healthmax(float value);

  // float HealthRemain = 3;
  void clear_healthremain();
  static const int kHealthRemainFieldNumber = 3;
  float healthremain() const;
  void set_healthremain(float value);

  // @@protoc_insertion_point(class_scope:PPlayerHealthRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  float healthmax_;
  float healthremain_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerHealthRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerActionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerActionRequest) */ {
 public:
  PPlayerActionRequest();
  virtual ~PPlayerActionRequest();

  PPlayerActionRequest(const PPlayerActionRequest& from);

  inline PPlayerActionRequest& operator=(const PPlayerActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerActionRequest(PPlayerActionRequest&& from) noexcept
    : PPlayerActionRequest() {
    *this = ::std::move(from);
  }

  inline PPlayerActionRequest& operator=(PPlayerActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerActionRequest* internal_default_instance() {
    return reinterpret_cast<const PPlayerActionRequest*>(
               &_PPlayerActionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PPlayerActionRequest* other);
  friend void swap(PPlayerActionRequest& a, PPlayerActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerActionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerActionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerActionRequest& from);
  void MergeFrom(const PPlayerActionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float LocationX = 1;
  void clear_locationx();
  static const int kLocationXFieldNumber = 1;
  float locationx() const;
  void set_locationx(float value);

  // float LocationY = 2;
  void clear_locationy();
  static const int kLocationYFieldNumber = 2;
  float locationy() const;
  void set_locationy(float value);

  // float TargetX = 3;
  void clear_targetx();
  static const int kTargetXFieldNumber = 3;
  float targetx() const;
  void set_targetx(float value);

  // float TargetY = 4;
  void clear_targety();
  static const int kTargetYFieldNumber = 4;
  float targety() const;
  void set_targety(float value);

  // int32 ActionID = 5;
  void clear_actionid();
  static const int kActionIDFieldNumber = 5;
  ::google::protobuf::int32 actionid() const;
  void set_actionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PPlayerActionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float locationx_;
  float locationy_;
  float targetx_;
  float targety_;
  ::google::protobuf::int32 actionid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerActionRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerActionRespond) */ {
 public:
  PPlayerActionRespond();
  virtual ~PPlayerActionRespond();

  PPlayerActionRespond(const PPlayerActionRespond& from);

  inline PPlayerActionRespond& operator=(const PPlayerActionRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerActionRespond(PPlayerActionRespond&& from) noexcept
    : PPlayerActionRespond() {
    *this = ::std::move(from);
  }

  inline PPlayerActionRespond& operator=(PPlayerActionRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerActionRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerActionRespond* internal_default_instance() {
    return reinterpret_cast<const PPlayerActionRespond*>(
               &_PPlayerActionRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PPlayerActionRespond* other);
  friend void swap(PPlayerActionRespond& a, PPlayerActionRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerActionRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerActionRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerActionRespond& from);
  void MergeFrom(const PPlayerActionRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerActionRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // float LocationX = 2;
  void clear_locationx();
  static const int kLocationXFieldNumber = 2;
  float locationx() const;
  void set_locationx(float value);

  // float LocationY = 3;
  void clear_locationy();
  static const int kLocationYFieldNumber = 3;
  float locationy() const;
  void set_locationy(float value);

  // float TargetX = 4;
  void clear_targetx();
  static const int kTargetXFieldNumber = 4;
  float targetx() const;
  void set_targetx(float value);

  // float TargetY = 5;
  void clear_targety();
  static const int kTargetYFieldNumber = 5;
  float targety() const;
  void set_targety(float value);

  // int32 ActionID = 6;
  void clear_actionid();
  static const int kActionIDFieldNumber = 6;
  ::google::protobuf::int32 actionid() const;
  void set_actionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PPlayerActionRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  float locationx_;
  float locationy_;
  float targetx_;
  float targety_;
  ::google::protobuf::int32 actionid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerActionRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerBuffRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerBuffRequest) */ {
 public:
  PPlayerBuffRequest();
  virtual ~PPlayerBuffRequest();

  PPlayerBuffRequest(const PPlayerBuffRequest& from);

  inline PPlayerBuffRequest& operator=(const PPlayerBuffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerBuffRequest(PPlayerBuffRequest&& from) noexcept
    : PPlayerBuffRequest() {
    *this = ::std::move(from);
  }

  inline PPlayerBuffRequest& operator=(PPlayerBuffRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerBuffRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerBuffRequest* internal_default_instance() {
    return reinterpret_cast<const PPlayerBuffRequest*>(
               &_PPlayerBuffRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PPlayerBuffRequest* other);
  friend void swap(PPlayerBuffRequest& a, PPlayerBuffRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerBuffRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerBuffRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerBuffRequest& from);
  void MergeFrom(const PPlayerBuffRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerBuffRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float Scale = 1;
  void clear_scale();
  static const int kScaleFieldNumber = 1;
  float scale() const;
  void set_scale(float value);

  // @@protoc_insertion_point(class_scope:PPlayerBuffRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float scale_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRequestImpl();
};
// -------------------------------------------------------------------

class PPlayerBuffRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerBuffRespond) */ {
 public:
  PPlayerBuffRespond();
  virtual ~PPlayerBuffRespond();

  PPlayerBuffRespond(const PPlayerBuffRespond& from);

  inline PPlayerBuffRespond& operator=(const PPlayerBuffRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerBuffRespond(PPlayerBuffRespond&& from) noexcept
    : PPlayerBuffRespond() {
    *this = ::std::move(from);
  }

  inline PPlayerBuffRespond& operator=(PPlayerBuffRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerBuffRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerBuffRespond* internal_default_instance() {
    return reinterpret_cast<const PPlayerBuffRespond*>(
               &_PPlayerBuffRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PPlayerBuffRespond* other);
  friend void swap(PPlayerBuffRespond& a, PPlayerBuffRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerBuffRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerBuffRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerBuffRespond& from);
  void MergeFrom(const PPlayerBuffRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerBuffRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // float Scale = 2;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  float scale() const;
  void set_scale(float value);

  // @@protoc_insertion_point(class_scope:PPlayerBuffRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  float scale_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerBuffRespondImpl();
};
// -------------------------------------------------------------------

class PMonsterKilledRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMonsterKilledRequest) */ {
 public:
  PMonsterKilledRequest();
  virtual ~PMonsterKilledRequest();

  PMonsterKilledRequest(const PMonsterKilledRequest& from);

  inline PMonsterKilledRequest& operator=(const PMonsterKilledRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMonsterKilledRequest(PMonsterKilledRequest&& from) noexcept
    : PMonsterKilledRequest() {
    *this = ::std::move(from);
  }

  inline PMonsterKilledRequest& operator=(PMonsterKilledRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMonsterKilledRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMonsterKilledRequest* internal_default_instance() {
    return reinterpret_cast<const PMonsterKilledRequest*>(
               &_PMonsterKilledRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(PMonsterKilledRequest* other);
  friend void swap(PMonsterKilledRequest& a, PMonsterKilledRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMonsterKilledRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PMonsterKilledRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMonsterKilledRequest& from);
  void MergeFrom(const PMonsterKilledRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMonsterKilledRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 MonsterID = 1;
  void clear_monsterid();
  static const int kMonsterIDFieldNumber = 1;
  ::google::protobuf::int32 monsterid() const;
  void set_monsterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PMonsterKilledRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 monsterid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRequestImpl();
};
// -------------------------------------------------------------------

class PMonsterKilledRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PMonsterKilledRespond) */ {
 public:
  PMonsterKilledRespond();
  virtual ~PMonsterKilledRespond();

  PMonsterKilledRespond(const PMonsterKilledRespond& from);

  inline PMonsterKilledRespond& operator=(const PMonsterKilledRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PMonsterKilledRespond(PMonsterKilledRespond&& from) noexcept
    : PMonsterKilledRespond() {
    *this = ::std::move(from);
  }

  inline PMonsterKilledRespond& operator=(PMonsterKilledRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PMonsterKilledRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PMonsterKilledRespond* internal_default_instance() {
    return reinterpret_cast<const PMonsterKilledRespond*>(
               &_PMonsterKilledRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PMonsterKilledRespond* other);
  friend void swap(PMonsterKilledRespond& a, PMonsterKilledRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PMonsterKilledRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PMonsterKilledRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PMonsterKilledRespond& from);
  void MergeFrom(const PMonsterKilledRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PMonsterKilledRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 MonsterID = 2;
  void clear_monsterid();
  static const int kMonsterIDFieldNumber = 2;
  ::google::protobuf::int32 monsterid() const;
  void set_monsterid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PMonsterKilledRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 monsterid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPMonsterKilledRespondImpl();
};
// -------------------------------------------------------------------

class PKilledRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PKilledRequest) */ {
 public:
  PKilledRequest();
  virtual ~PKilledRequest();

  PKilledRequest(const PKilledRequest& from);

  inline PKilledRequest& operator=(const PKilledRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PKilledRequest(PKilledRequest&& from) noexcept
    : PKilledRequest() {
    *this = ::std::move(from);
  }

  inline PKilledRequest& operator=(PKilledRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PKilledRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PKilledRequest* internal_default_instance() {
    return reinterpret_cast<const PKilledRequest*>(
               &_PKilledRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PKilledRequest* other);
  friend void swap(PKilledRequest& a, PKilledRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PKilledRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PKilledRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PKilledRequest& from);
  void MergeFrom(const PKilledRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PKilledRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 OtherPlayerID = 1;
  void clear_otherplayerid();
  static const int kOtherPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 otherplayerid() const;
  void set_otherplayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PKilledRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 otherplayerid_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRequestImpl();
};
// -------------------------------------------------------------------

class PKilledRespond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PKilledRespond) */ {
 public:
  PKilledRespond();
  virtual ~PKilledRespond();

  PKilledRespond(const PKilledRespond& from);

  inline PKilledRespond& operator=(const PKilledRespond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PKilledRespond(PKilledRespond&& from) noexcept
    : PKilledRespond() {
    *this = ::std::move(from);
  }

  inline PKilledRespond& operator=(PKilledRespond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PKilledRespond& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PKilledRespond* internal_default_instance() {
    return reinterpret_cast<const PKilledRespond*>(
               &_PKilledRespond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PKilledRespond* other);
  friend void swap(PKilledRespond& a, PKilledRespond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PKilledRespond* New() const PROTOBUF_FINAL { return New(NULL); }

  PKilledRespond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PKilledRespond& from);
  void MergeFrom(const PKilledRespond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PKilledRespond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 DiedPlayerID = 1;
  void clear_diedplayerid();
  static const int kDiedPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 diedplayerid() const;
  void set_diedplayerid(::google::protobuf::int32 value);

  // int32 KillerID = 2;
  void clear_killerid();
  static const int kKillerIDFieldNumber = 2;
  ::google::protobuf::int32 killerid() const;
  void set_killerid(::google::protobuf::int32 value);

  // int32 Rank = 3;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PKilledRespond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 diedplayerid_;
  ::google::protobuf::int32 killerid_;
  ::google::protobuf::int32 rank_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPKilledRespondImpl();
};
// -------------------------------------------------------------------

class PPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PPlayerInfo) */ {
 public:
  PPlayerInfo();
  virtual ~PPlayerInfo();

  PPlayerInfo(const PPlayerInfo& from);

  inline PPlayerInfo& operator=(const PPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PPlayerInfo(PPlayerInfo&& from) noexcept
    : PPlayerInfo() {
    *this = ::std::move(from);
  }

  inline PPlayerInfo& operator=(PPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PPlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PPlayerInfo*>(
               &_PPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PPlayerInfo* other);
  friend void swap(PPlayerInfo& a, PPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PPlayerInfo& from);
  void MergeFrom(const PPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPPlayerInfoImpl();
};
// -------------------------------------------------------------------

class PClientStep_Vec2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PClientStep.Vec2) */ {
 public:
  PClientStep_Vec2();
  virtual ~PClientStep_Vec2();

  PClientStep_Vec2(const PClientStep_Vec2& from);

  inline PClientStep_Vec2& operator=(const PClientStep_Vec2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PClientStep_Vec2(PClientStep_Vec2&& from) noexcept
    : PClientStep_Vec2() {
    *this = ::std::move(from);
  }

  inline PClientStep_Vec2& operator=(PClientStep_Vec2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PClientStep_Vec2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PClientStep_Vec2* internal_default_instance() {
    return reinterpret_cast<const PClientStep_Vec2*>(
               &_PClientStep_Vec2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PClientStep_Vec2* other);
  friend void swap(PClientStep_Vec2& a, PClientStep_Vec2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PClientStep_Vec2* New() const PROTOBUF_FINAL { return New(NULL); }

  PClientStep_Vec2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PClientStep_Vec2& from);
  void MergeFrom(const PClientStep_Vec2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PClientStep_Vec2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PClientStep.Vec2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_Vec2Impl();
};
// -------------------------------------------------------------------

class PClientStep_Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PClientStep.Action) */ {
 public:
  PClientStep_Action();
  virtual ~PClientStep_Action();

  PClientStep_Action(const PClientStep_Action& from);

  inline PClientStep_Action& operator=(const PClientStep_Action& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PClientStep_Action(PClientStep_Action&& from) noexcept
    : PClientStep_Action() {
    *this = ::std::move(from);
  }

  inline PClientStep_Action& operator=(PClientStep_Action&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PClientStep_Action& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PClientStep_Action* internal_default_instance() {
    return reinterpret_cast<const PClientStep_Action*>(
               &_PClientStep_Action_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PClientStep_Action* other);
  friend void swap(PClientStep_Action& a, PClientStep_Action& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PClientStep_Action* New() const PROTOBUF_FINAL { return New(NULL); }

  PClientStep_Action* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PClientStep_Action& from);
  void MergeFrom(const PClientStep_Action& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PClientStep_Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PClientStep.Vec2 Location = 2;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  const ::PClientStep_Vec2& location() const;
  ::PClientStep_Vec2* release_location();
  ::PClientStep_Vec2* mutable_location();
  void set_allocated_location(::PClientStep_Vec2* location);

  // .PClientStep.Vec2 Target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::PClientStep_Vec2& target() const;
  ::PClientStep_Vec2* release_target();
  ::PClientStep_Vec2* mutable_target();
  void set_allocated_target(::PClientStep_Vec2* target);

  // int32 Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PClientStep.Action)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PClientStep_Vec2* location_;
  ::PClientStep_Vec2* target_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPClientStep_ActionImpl();
};
// -------------------------------------------------------------------

class PClientStep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PClientStep) */ {
 public:
  PClientStep();
  virtual ~PClientStep();

  PClientStep(const PClientStep& from);

  inline PClientStep& operator=(const PClientStep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PClientStep(PClientStep&& from) noexcept
    : PClientStep() {
    *this = ::std::move(from);
  }

  inline PClientStep& operator=(PClientStep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PClientStep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PClientStep* internal_default_instance() {
    return reinterpret_cast<const PClientStep*>(
               &_PClientStep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(PClientStep* other);
  friend void swap(PClientStep& a, PClientStep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PClientStep* New() const PROTOBUF_FINAL { return New(NULL); }

  PClientStep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PClientStep& from);
  void MergeFrom(const PClientStep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PClientStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PClientStep_Vec2 Vec2;
  typedef PClientStep_Action Action;

  // accessors -------------------------------------------------------

  // repeated .PClientStep.Action ActionsInThisStep = 4;
  int actionsinthisstep_size() const;
  void clear_actionsinthisstep();
  static const int kActionsInThisStepFieldNumber = 4;
  const ::PClientStep_Action& actionsinthisstep(int index) const;
  ::PClientStep_Action* mutable_actionsinthisstep(int index);
  ::PClientStep_Action* add_actionsinthisstep();
  ::google::protobuf::RepeatedPtrField< ::PClientStep_Action >*
      mutable_actionsinthisstep();
  const ::google::protobuf::RepeatedPtrField< ::PClientStep_Action >&
      actionsinthisstep() const;

  // .PClientStep.Vec2 MoveInThisStep = 2;
  bool has_moveinthisstep() const;
  void clear_moveinthisstep();
  static const int kMoveInThisStepFieldNumber = 2;
  const ::PClientStep_Vec2& moveinthisstep() const;
  ::PClientStep_Vec2* release_moveinthisstep();
  ::PClientStep_Vec2* mutable_moveinthisstep();
  void set_allocated_moveinthisstep(::PClientStep_Vec2* moveinthisstep);

  // .PClientStep.Vec2 TurnInThisStep = 3;
  bool has_turninthisstep() const;
  void clear_turninthisstep();
  static const int kTurnInThisStepFieldNumber = 3;
  const ::PClientStep_Vec2& turninthisstep() const;
  ::PClientStep_Vec2* release_turninthisstep();
  ::PClientStep_Vec2* mutable_turninthisstep();
  void set_allocated_turninthisstep(::PClientStep_Vec2* turninthisstep);

  // int32 StepIndex = 1;
  void clear_stepindex();
  static const int kStepIndexFieldNumber = 1;
  ::google::protobuf::int32 stepindex() const;
  void set_stepindex(::google::protobuf::int32 value);

  // float LastHealthInThisStep = 5;
  void clear_lasthealthinthisstep();
  static const int kLastHealthInThisStepFieldNumber = 5;
  float lasthealthinthisstep() const;
  void set_lasthealthinthisstep(float value);

  // @@protoc_insertion_point(class_scope:PClientStep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PClientStep_Action > actionsinthisstep_;
  ::PClientStep_Vec2* moveinthisstep_;
  ::PClientStep_Vec2* turninthisstep_;
  ::google::protobuf::int32 stepindex_;
  float lasthealthinthisstep_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPClientStepImpl();
};
// -------------------------------------------------------------------

class PServerStep_Client : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PServerStep.Client) */ {
 public:
  PServerStep_Client();
  virtual ~PServerStep_Client();

  PServerStep_Client(const PServerStep_Client& from);

  inline PServerStep_Client& operator=(const PServerStep_Client& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PServerStep_Client(PServerStep_Client&& from) noexcept
    : PServerStep_Client() {
    *this = ::std::move(from);
  }

  inline PServerStep_Client& operator=(PServerStep_Client&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PServerStep_Client& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PServerStep_Client* internal_default_instance() {
    return reinterpret_cast<const PServerStep_Client*>(
               &_PServerStep_Client_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PServerStep_Client* other);
  friend void swap(PServerStep_Client& a, PServerStep_Client& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PServerStep_Client* New() const PROTOBUF_FINAL { return New(NULL); }

  PServerStep_Client* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PServerStep_Client& from);
  void MergeFrom(const PServerStep_Client& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PServerStep_Client* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PClientStep Step = 3;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 3;
  const ::PClientStep& step() const;
  ::PClientStep* release_step();
  ::PClientStep* mutable_step();
  void set_allocated_step(::PClientStep* step);

  // int32 PlayerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // int32 IsEmpty = 2;
  void clear_isempty();
  static const int kIsEmptyFieldNumber = 2;
  ::google::protobuf::int32 isempty() const;
  void set_isempty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PServerStep.Client)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PClientStep* step_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 isempty_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPServerStep_ClientImpl();
};
// -------------------------------------------------------------------

class PServerStep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PServerStep) */ {
 public:
  PServerStep();
  virtual ~PServerStep();

  PServerStep(const PServerStep& from);

  inline PServerStep& operator=(const PServerStep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PServerStep(PServerStep&& from) noexcept
    : PServerStep() {
    *this = ::std::move(from);
  }

  inline PServerStep& operator=(PServerStep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PServerStep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PServerStep* internal_default_instance() {
    return reinterpret_cast<const PServerStep*>(
               &_PServerStep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(PServerStep* other);
  friend void swap(PServerStep& a, PServerStep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PServerStep* New() const PROTOBUF_FINAL { return New(NULL); }

  PServerStep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PServerStep& from);
  void MergeFrom(const PServerStep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PServerStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PServerStep_Client Client;

  // accessors -------------------------------------------------------

  // repeated .PServerStep.Client AllClients = 2;
  int allclients_size() const;
  void clear_allclients();
  static const int kAllClientsFieldNumber = 2;
  const ::PServerStep_Client& allclients(int index) const;
  ::PServerStep_Client* mutable_allclients(int index);
  ::PServerStep_Client* add_allclients();
  ::google::protobuf::RepeatedPtrField< ::PServerStep_Client >*
      mutable_allclients();
  const ::google::protobuf::RepeatedPtrField< ::PServerStep_Client >&
      allclients() const;

  // int32 StepIndex = 1;
  void clear_stepindex();
  static const int kStepIndexFieldNumber = 1;
  ::google::protobuf::int32 stepindex() const;
  void set_stepindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PServerStep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PServerStep_Client > allclients_;
  ::google::protobuf::int32 stepindex_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessage_2eproto::TableStruct;
  friend void ::protobuf_GameMessage_2eproto::InitDefaultsPServerStepImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PRegisterRequest

// string UserName = 1;
inline void PRegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PRegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:PRegisterRequest.UserName)
  return username_.GetNoArena();
}
inline void PRegisterRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRegisterRequest.UserName)
}
#if LANG_CXX11
inline void PRegisterRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRegisterRequest.UserName)
}
#endif
inline void PRegisterRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRegisterRequest.UserName)
}
inline void PRegisterRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRegisterRequest.UserName)
}
inline ::std::string* PRegisterRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:PRegisterRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:PRegisterRequest.UserName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegisterRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PRegisterRequest.UserName)
}

// string PassWord = 2;
inline void PRegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PRegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:PRegisterRequest.PassWord)
  return password_.GetNoArena();
}
inline void PRegisterRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRegisterRequest.PassWord)
}
#if LANG_CXX11
inline void PRegisterRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRegisterRequest.PassWord)
}
#endif
inline void PRegisterRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRegisterRequest.PassWord)
}
inline void PRegisterRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRegisterRequest.PassWord)
}
inline ::std::string* PRegisterRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:PRegisterRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:PRegisterRequest.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PRegisterRequest.PassWord)
}

// -------------------------------------------------------------------

// PRegisterRespond

// int32 Success = 1;
inline void PRegisterRespond::clear_success() {
  success_ = 0;
}
inline ::google::protobuf::int32 PRegisterRespond::success() const {
  // @@protoc_insertion_point(field_get:PRegisterRespond.Success)
  return success_;
}
inline void PRegisterRespond::set_success(::google::protobuf::int32 value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:PRegisterRespond.Success)
}

// int32 ErrorCode = 2;
inline void PRegisterRespond::clear_errorcode() {
  errorcode_ = 0;
}
inline ::google::protobuf::int32 PRegisterRespond::errorcode() const {
  // @@protoc_insertion_point(field_get:PRegisterRespond.ErrorCode)
  return errorcode_;
}
inline void PRegisterRespond::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:PRegisterRespond.ErrorCode)
}

// -------------------------------------------------------------------

// PLoginRequest

// string UserName = 1;
inline void PLoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PLoginRequest::username() const {
  // @@protoc_insertion_point(field_get:PLoginRequest.UserName)
  return username_.GetNoArena();
}
inline void PLoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PLoginRequest.UserName)
}
#if LANG_CXX11
inline void PLoginRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PLoginRequest.UserName)
}
#endif
inline void PLoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PLoginRequest.UserName)
}
inline void PLoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PLoginRequest.UserName)
}
inline ::std::string* PLoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:PLoginRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PLoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:PLoginRequest.UserName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PLoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PLoginRequest.UserName)
}

// string PassWord = 2;
inline void PLoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PLoginRequest::password() const {
  // @@protoc_insertion_point(field_get:PLoginRequest.PassWord)
  return password_.GetNoArena();
}
inline void PLoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PLoginRequest.PassWord)
}
#if LANG_CXX11
inline void PLoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PLoginRequest.PassWord)
}
#endif
inline void PLoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PLoginRequest.PassWord)
}
inline void PLoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PLoginRequest.PassWord)
}
inline ::std::string* PLoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:PLoginRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PLoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:PLoginRequest.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PLoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PLoginRequest.PassWord)
}

// -------------------------------------------------------------------

// PLoginRespond

// int32 Success = 1;
inline void PLoginRespond::clear_success() {
  success_ = 0;
}
inline ::google::protobuf::int32 PLoginRespond::success() const {
  // @@protoc_insertion_point(field_get:PLoginRespond.Success)
  return success_;
}
inline void PLoginRespond::set_success(::google::protobuf::int32 value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:PLoginRespond.Success)
}

// int32 ErrorCode = 2;
inline void PLoginRespond::clear_errorcode() {
  errorcode_ = 0;
}
inline ::google::protobuf::int32 PLoginRespond::errorcode() const {
  // @@protoc_insertion_point(field_get:PLoginRespond.ErrorCode)
  return errorcode_;
}
inline void PLoginRespond::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:PLoginRespond.ErrorCode)
}

// -------------------------------------------------------------------

// PMatchRequest

// int32 HeroID = 1;
inline void PMatchRequest::clear_heroid() {
  heroid_ = 0;
}
inline ::google::protobuf::int32 PMatchRequest::heroid() const {
  // @@protoc_insertion_point(field_get:PMatchRequest.HeroID)
  return heroid_;
}
inline void PMatchRequest::set_heroid(::google::protobuf::int32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:PMatchRequest.HeroID)
}

// int32 SkinID = 2;
inline void PMatchRequest::clear_skinid() {
  skinid_ = 0;
}
inline ::google::protobuf::int32 PMatchRequest::skinid() const {
  // @@protoc_insertion_point(field_get:PMatchRequest.SkinID)
  return skinid_;
}
inline void PMatchRequest::set_skinid(::google::protobuf::int32 value) {
  
  skinid_ = value;
  // @@protoc_insertion_point(field_set:PMatchRequest.SkinID)
}

// string UserName = 3;
inline void PMatchRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PMatchRequest::username() const {
  // @@protoc_insertion_point(field_get:PMatchRequest.UserName)
  return username_.GetNoArena();
}
inline void PMatchRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PMatchRequest.UserName)
}
#if LANG_CXX11
inline void PMatchRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PMatchRequest.UserName)
}
#endif
inline void PMatchRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PMatchRequest.UserName)
}
inline void PMatchRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PMatchRequest.UserName)
}
inline ::std::string* PMatchRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:PMatchRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMatchRequest::release_username() {
  // @@protoc_insertion_point(field_release:PMatchRequest.UserName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMatchRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PMatchRequest.UserName)
}

// -------------------------------------------------------------------

// PMatchFoundRespond_POtherPlayerInfo

// int32 PlayerID = 1;
inline void PMatchFoundRespond_POtherPlayerInfo::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PMatchFoundRespond_POtherPlayerInfo::playerid() const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.POtherPlayerInfo.PlayerID)
  return playerid_;
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PMatchFoundRespond.POtherPlayerInfo.PlayerID)
}

// string PlayerName = 2;
inline void PMatchFoundRespond_POtherPlayerInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PMatchFoundRespond_POtherPlayerInfo::playername() const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
  return playername_.GetNoArena();
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
}
#if LANG_CXX11
inline void PMatchFoundRespond_POtherPlayerInfo::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
}
#endif
inline void PMatchFoundRespond_POtherPlayerInfo::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
}
inline ::std::string* PMatchFoundRespond_POtherPlayerInfo::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PMatchFoundRespond_POtherPlayerInfo::release_playername() {
  // @@protoc_insertion_point(field_release:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:PMatchFoundRespond.POtherPlayerInfo.PlayerName)
}

// int32 HeroID = 3;
inline void PMatchFoundRespond_POtherPlayerInfo::clear_heroid() {
  heroid_ = 0;
}
inline ::google::protobuf::int32 PMatchFoundRespond_POtherPlayerInfo::heroid() const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.POtherPlayerInfo.HeroID)
  return heroid_;
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_heroid(::google::protobuf::int32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:PMatchFoundRespond.POtherPlayerInfo.HeroID)
}

// int32 SkinID = 4;
inline void PMatchFoundRespond_POtherPlayerInfo::clear_skinid() {
  skinid_ = 0;
}
inline ::google::protobuf::int32 PMatchFoundRespond_POtherPlayerInfo::skinid() const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.POtherPlayerInfo.SkinID)
  return skinid_;
}
inline void PMatchFoundRespond_POtherPlayerInfo::set_skinid(::google::protobuf::int32 value) {
  
  skinid_ = value;
  // @@protoc_insertion_point(field_set:PMatchFoundRespond.POtherPlayerInfo.SkinID)
}

// -------------------------------------------------------------------

// PMatchFoundRespond

// int32 RandomSeed = 1;
inline void PMatchFoundRespond::clear_randomseed() {
  randomseed_ = 0;
}
inline ::google::protobuf::int32 PMatchFoundRespond::randomseed() const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.RandomSeed)
  return randomseed_;
}
inline void PMatchFoundRespond::set_randomseed(::google::protobuf::int32 value) {
  
  randomseed_ = value;
  // @@protoc_insertion_point(field_set:PMatchFoundRespond.RandomSeed)
}

// repeated .PMatchFoundRespond.POtherPlayerInfo OtherPlayers = 2;
inline int PMatchFoundRespond::otherplayers_size() const {
  return otherplayers_.size();
}
inline void PMatchFoundRespond::clear_otherplayers() {
  otherplayers_.Clear();
}
inline const ::PMatchFoundRespond_POtherPlayerInfo& PMatchFoundRespond::otherplayers(int index) const {
  // @@protoc_insertion_point(field_get:PMatchFoundRespond.OtherPlayers)
  return otherplayers_.Get(index);
}
inline ::PMatchFoundRespond_POtherPlayerInfo* PMatchFoundRespond::mutable_otherplayers(int index) {
  // @@protoc_insertion_point(field_mutable:PMatchFoundRespond.OtherPlayers)
  return otherplayers_.Mutable(index);
}
inline ::PMatchFoundRespond_POtherPlayerInfo* PMatchFoundRespond::add_otherplayers() {
  // @@protoc_insertion_point(field_add:PMatchFoundRespond.OtherPlayers)
  return otherplayers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PMatchFoundRespond_POtherPlayerInfo >*
PMatchFoundRespond::mutable_otherplayers() {
  // @@protoc_insertion_point(field_mutable_list:PMatchFoundRespond.OtherPlayers)
  return &otherplayers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PMatchFoundRespond_POtherPlayerInfo >&
PMatchFoundRespond::otherplayers() const {
  // @@protoc_insertion_point(field_list:PMatchFoundRespond.OtherPlayers)
  return otherplayers_;
}

// -------------------------------------------------------------------

// PPlayerMoveRequest

// float X = 1;
inline void PPlayerMoveRequest::clear_x() {
  x_ = 0;
}
inline float PPlayerMoveRequest::x() const {
  // @@protoc_insertion_point(field_get:PPlayerMoveRequest.X)
  return x_;
}
inline void PPlayerMoveRequest::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMoveRequest.X)
}

// float Y = 2;
inline void PPlayerMoveRequest::clear_y() {
  y_ = 0;
}
inline float PPlayerMoveRequest::y() const {
  // @@protoc_insertion_point(field_get:PPlayerMoveRequest.Y)
  return y_;
}
inline void PPlayerMoveRequest::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMoveRequest.Y)
}

// -------------------------------------------------------------------

// PPlayerMoveRespond

// int32 PlayerID = 1;
inline void PPlayerMoveRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PPlayerMoveRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerMoveRespond.PlayerID)
  return playerid_;
}
inline void PPlayerMoveRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMoveRespond.PlayerID)
}

// float X = 2;
inline void PPlayerMoveRespond::clear_x() {
  x_ = 0;
}
inline float PPlayerMoveRespond::x() const {
  // @@protoc_insertion_point(field_get:PPlayerMoveRespond.X)
  return x_;
}
inline void PPlayerMoveRespond::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMoveRespond.X)
}

// float Y = 3;
inline void PPlayerMoveRespond::clear_y() {
  y_ = 0;
}
inline float PPlayerMoveRespond::y() const {
  // @@protoc_insertion_point(field_get:PPlayerMoveRespond.Y)
  return y_;
}
inline void PPlayerMoveRespond::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PPlayerMoveRespond.Y)
}

// -------------------------------------------------------------------

// PPlayerTurnRequest

// float X = 1;
inline void PPlayerTurnRequest::clear_x() {
  x_ = 0;
}
inline float PPlayerTurnRequest::x() const {
  // @@protoc_insertion_point(field_get:PPlayerTurnRequest.X)
  return x_;
}
inline void PPlayerTurnRequest::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurnRequest.X)
}

// float Y = 2;
inline void PPlayerTurnRequest::clear_y() {
  y_ = 0;
}
inline float PPlayerTurnRequest::y() const {
  // @@protoc_insertion_point(field_get:PPlayerTurnRequest.Y)
  return y_;
}
inline void PPlayerTurnRequest::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurnRequest.Y)
}

// -------------------------------------------------------------------

// PPlayerTurnRespond

// int32 PlayerID = 1;
inline void PPlayerTurnRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PPlayerTurnRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerTurnRespond.PlayerID)
  return playerid_;
}
inline void PPlayerTurnRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurnRespond.PlayerID)
}

// float X = 2;
inline void PPlayerTurnRespond::clear_x() {
  x_ = 0;
}
inline float PPlayerTurnRespond::x() const {
  // @@protoc_insertion_point(field_get:PPlayerTurnRespond.X)
  return x_;
}
inline void PPlayerTurnRespond::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurnRespond.X)
}

// float Y = 3;
inline void PPlayerTurnRespond::clear_y() {
  y_ = 0;
}
inline float PPlayerTurnRespond::y() const {
  // @@protoc_insertion_point(field_get:PPlayerTurnRespond.Y)
  return y_;
}
inline void PPlayerTurnRespond::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PPlayerTurnRespond.Y)
}

// -------------------------------------------------------------------

// PPlayerHealthRequest

// float HealthMax = 1;
inline void PPlayerHealthRequest::clear_healthmax() {
  healthmax_ = 0;
}
inline float PPlayerHealthRequest::healthmax() const {
  // @@protoc_insertion_point(field_get:PPlayerHealthRequest.HealthMax)
  return healthmax_;
}
inline void PPlayerHealthRequest::set_healthmax(float value) {
  
  healthmax_ = value;
  // @@protoc_insertion_point(field_set:PPlayerHealthRequest.HealthMax)
}

// float HealthRemain = 2;
inline void PPlayerHealthRequest::clear_healthremain() {
  healthremain_ = 0;
}
inline float PPlayerHealthRequest::healthremain() const {
  // @@protoc_insertion_point(field_get:PPlayerHealthRequest.HealthRemain)
  return healthremain_;
}
inline void PPlayerHealthRequest::set_healthremain(float value) {
  
  healthremain_ = value;
  // @@protoc_insertion_point(field_set:PPlayerHealthRequest.HealthRemain)
}

// -------------------------------------------------------------------

// PPlayerHealthRespond

// int32 PlayerID = 1;
inline void PPlayerHealthRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PPlayerHealthRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerHealthRespond.PlayerID)
  return playerid_;
}
inline void PPlayerHealthRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerHealthRespond.PlayerID)
}

// float HealthMax = 2;
inline void PPlayerHealthRespond::clear_healthmax() {
  healthmax_ = 0;
}
inline float PPlayerHealthRespond::healthmax() const {
  // @@protoc_insertion_point(field_get:PPlayerHealthRespond.HealthMax)
  return healthmax_;
}
inline void PPlayerHealthRespond::set_healthmax(float value) {
  
  healthmax_ = value;
  // @@protoc_insertion_point(field_set:PPlayerHealthRespond.HealthMax)
}

// float HealthRemain = 3;
inline void PPlayerHealthRespond::clear_healthremain() {
  healthremain_ = 0;
}
inline float PPlayerHealthRespond::healthremain() const {
  // @@protoc_insertion_point(field_get:PPlayerHealthRespond.HealthRemain)
  return healthremain_;
}
inline void PPlayerHealthRespond::set_healthremain(float value) {
  
  healthremain_ = value;
  // @@protoc_insertion_point(field_set:PPlayerHealthRespond.HealthRemain)
}

// -------------------------------------------------------------------

// PPlayerActionRequest

// float LocationX = 1;
inline void PPlayerActionRequest::clear_locationx() {
  locationx_ = 0;
}
inline float PPlayerActionRequest::locationx() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRequest.LocationX)
  return locationx_;
}
inline void PPlayerActionRequest::set_locationx(float value) {
  
  locationx_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRequest.LocationX)
}

// float LocationY = 2;
inline void PPlayerActionRequest::clear_locationy() {
  locationy_ = 0;
}
inline float PPlayerActionRequest::locationy() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRequest.LocationY)
  return locationy_;
}
inline void PPlayerActionRequest::set_locationy(float value) {
  
  locationy_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRequest.LocationY)
}

// float TargetX = 3;
inline void PPlayerActionRequest::clear_targetx() {
  targetx_ = 0;
}
inline float PPlayerActionRequest::targetx() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRequest.TargetX)
  return targetx_;
}
inline void PPlayerActionRequest::set_targetx(float value) {
  
  targetx_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRequest.TargetX)
}

// float TargetY = 4;
inline void PPlayerActionRequest::clear_targety() {
  targety_ = 0;
}
inline float PPlayerActionRequest::targety() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRequest.TargetY)
  return targety_;
}
inline void PPlayerActionRequest::set_targety(float value) {
  
  targety_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRequest.TargetY)
}

// int32 ActionID = 5;
inline void PPlayerActionRequest::clear_actionid() {
  actionid_ = 0;
}
inline ::google::protobuf::int32 PPlayerActionRequest::actionid() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRequest.ActionID)
  return actionid_;
}
inline void PPlayerActionRequest::set_actionid(::google::protobuf::int32 value) {
  
  actionid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRequest.ActionID)
}

// -------------------------------------------------------------------

// PPlayerActionRespond

// int32 PlayerID = 1;
inline void PPlayerActionRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PPlayerActionRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.PlayerID)
  return playerid_;
}
inline void PPlayerActionRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.PlayerID)
}

// float LocationX = 2;
inline void PPlayerActionRespond::clear_locationx() {
  locationx_ = 0;
}
inline float PPlayerActionRespond::locationx() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.LocationX)
  return locationx_;
}
inline void PPlayerActionRespond::set_locationx(float value) {
  
  locationx_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.LocationX)
}

// float LocationY = 3;
inline void PPlayerActionRespond::clear_locationy() {
  locationy_ = 0;
}
inline float PPlayerActionRespond::locationy() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.LocationY)
  return locationy_;
}
inline void PPlayerActionRespond::set_locationy(float value) {
  
  locationy_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.LocationY)
}

// float TargetX = 4;
inline void PPlayerActionRespond::clear_targetx() {
  targetx_ = 0;
}
inline float PPlayerActionRespond::targetx() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.TargetX)
  return targetx_;
}
inline void PPlayerActionRespond::set_targetx(float value) {
  
  targetx_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.TargetX)
}

// float TargetY = 5;
inline void PPlayerActionRespond::clear_targety() {
  targety_ = 0;
}
inline float PPlayerActionRespond::targety() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.TargetY)
  return targety_;
}
inline void PPlayerActionRespond::set_targety(float value) {
  
  targety_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.TargetY)
}

// int32 ActionID = 6;
inline void PPlayerActionRespond::clear_actionid() {
  actionid_ = 0;
}
inline ::google::protobuf::int32 PPlayerActionRespond::actionid() const {
  // @@protoc_insertion_point(field_get:PPlayerActionRespond.ActionID)
  return actionid_;
}
inline void PPlayerActionRespond::set_actionid(::google::protobuf::int32 value) {
  
  actionid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerActionRespond.ActionID)
}

// -------------------------------------------------------------------

// PPlayerBuffRequest

// float Scale = 1;
inline void PPlayerBuffRequest::clear_scale() {
  scale_ = 0;
}
inline float PPlayerBuffRequest::scale() const {
  // @@protoc_insertion_point(field_get:PPlayerBuffRequest.Scale)
  return scale_;
}
inline void PPlayerBuffRequest::set_scale(float value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:PPlayerBuffRequest.Scale)
}

// -------------------------------------------------------------------

// PPlayerBuffRespond

// int32 PlayerID = 1;
inline void PPlayerBuffRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PPlayerBuffRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PPlayerBuffRespond.PlayerID)
  return playerid_;
}
inline void PPlayerBuffRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PPlayerBuffRespond.PlayerID)
}

// float Scale = 2;
inline void PPlayerBuffRespond::clear_scale() {
  scale_ = 0;
}
inline float PPlayerBuffRespond::scale() const {
  // @@protoc_insertion_point(field_get:PPlayerBuffRespond.Scale)
  return scale_;
}
inline void PPlayerBuffRespond::set_scale(float value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:PPlayerBuffRespond.Scale)
}

// -------------------------------------------------------------------

// PMonsterKilledRequest

// int32 MonsterID = 1;
inline void PMonsterKilledRequest::clear_monsterid() {
  monsterid_ = 0;
}
inline ::google::protobuf::int32 PMonsterKilledRequest::monsterid() const {
  // @@protoc_insertion_point(field_get:PMonsterKilledRequest.MonsterID)
  return monsterid_;
}
inline void PMonsterKilledRequest::set_monsterid(::google::protobuf::int32 value) {
  
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:PMonsterKilledRequest.MonsterID)
}

// -------------------------------------------------------------------

// PMonsterKilledRespond

// int32 PlayerID = 1;
inline void PMonsterKilledRespond::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PMonsterKilledRespond::playerid() const {
  // @@protoc_insertion_point(field_get:PMonsterKilledRespond.PlayerID)
  return playerid_;
}
inline void PMonsterKilledRespond::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PMonsterKilledRespond.PlayerID)
}

// int32 MonsterID = 2;
inline void PMonsterKilledRespond::clear_monsterid() {
  monsterid_ = 0;
}
inline ::google::protobuf::int32 PMonsterKilledRespond::monsterid() const {
  // @@protoc_insertion_point(field_get:PMonsterKilledRespond.MonsterID)
  return monsterid_;
}
inline void PMonsterKilledRespond::set_monsterid(::google::protobuf::int32 value) {
  
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:PMonsterKilledRespond.MonsterID)
}

// -------------------------------------------------------------------

// PKilledRequest

// int32 OtherPlayerID = 1;
inline void PKilledRequest::clear_otherplayerid() {
  otherplayerid_ = 0;
}
inline ::google::protobuf::int32 PKilledRequest::otherplayerid() const {
  // @@protoc_insertion_point(field_get:PKilledRequest.OtherPlayerID)
  return otherplayerid_;
}
inline void PKilledRequest::set_otherplayerid(::google::protobuf::int32 value) {
  
  otherplayerid_ = value;
  // @@protoc_insertion_point(field_set:PKilledRequest.OtherPlayerID)
}

// -------------------------------------------------------------------

// PKilledRespond

// int32 DiedPlayerID = 1;
inline void PKilledRespond::clear_diedplayerid() {
  diedplayerid_ = 0;
}
inline ::google::protobuf::int32 PKilledRespond::diedplayerid() const {
  // @@protoc_insertion_point(field_get:PKilledRespond.DiedPlayerID)
  return diedplayerid_;
}
inline void PKilledRespond::set_diedplayerid(::google::protobuf::int32 value) {
  
  diedplayerid_ = value;
  // @@protoc_insertion_point(field_set:PKilledRespond.DiedPlayerID)
}

// int32 KillerID = 2;
inline void PKilledRespond::clear_killerid() {
  killerid_ = 0;
}
inline ::google::protobuf::int32 PKilledRespond::killerid() const {
  // @@protoc_insertion_point(field_get:PKilledRespond.KillerID)
  return killerid_;
}
inline void PKilledRespond::set_killerid(::google::protobuf::int32 value) {
  
  killerid_ = value;
  // @@protoc_insertion_point(field_set:PKilledRespond.KillerID)
}

// int32 Rank = 3;
inline void PKilledRespond::clear_rank() {
  rank_ = 0;
}
inline ::google::protobuf::int32 PKilledRespond::rank() const {
  // @@protoc_insertion_point(field_get:PKilledRespond.Rank)
  return rank_;
}
inline void PKilledRespond::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:PKilledRespond.Rank)
}

// -------------------------------------------------------------------

// PPlayerInfo

// -------------------------------------------------------------------

// PClientStep_Vec2

// float X = 1;
inline void PClientStep_Vec2::clear_x() {
  x_ = 0;
}
inline float PClientStep_Vec2::x() const {
  // @@protoc_insertion_point(field_get:PClientStep.Vec2.X)
  return x_;
}
inline void PClientStep_Vec2::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PClientStep.Vec2.X)
}

// float Y = 2;
inline void PClientStep_Vec2::clear_y() {
  y_ = 0;
}
inline float PClientStep_Vec2::y() const {
  // @@protoc_insertion_point(field_get:PClientStep.Vec2.Y)
  return y_;
}
inline void PClientStep_Vec2::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PClientStep.Vec2.Y)
}

// -------------------------------------------------------------------

// PClientStep_Action

// int32 Type = 1;
inline void PClientStep_Action::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 PClientStep_Action::type() const {
  // @@protoc_insertion_point(field_get:PClientStep.Action.Type)
  return type_;
}
inline void PClientStep_Action::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PClientStep.Action.Type)
}

// .PClientStep.Vec2 Location = 2;
inline bool PClientStep_Action::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void PClientStep_Action::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
inline const ::PClientStep_Vec2& PClientStep_Action::location() const {
  const ::PClientStep_Vec2* p = location_;
  // @@protoc_insertion_point(field_get:PClientStep.Action.Location)
  return p != NULL ? *p : *reinterpret_cast<const ::PClientStep_Vec2*>(
      &::_PClientStep_Vec2_default_instance_);
}
inline ::PClientStep_Vec2* PClientStep_Action::release_location() {
  // @@protoc_insertion_point(field_release:PClientStep.Action.Location)
  
  ::PClientStep_Vec2* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::PClientStep_Vec2* PClientStep_Action::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::PClientStep_Vec2;
  }
  // @@protoc_insertion_point(field_mutable:PClientStep.Action.Location)
  return location_;
}
inline void PClientStep_Action::set_allocated_location(::PClientStep_Vec2* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete location_;
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:PClientStep.Action.Location)
}

// .PClientStep.Vec2 Target = 3;
inline bool PClientStep_Action::has_target() const {
  return this != internal_default_instance() && target_ != NULL;
}
inline void PClientStep_Action::clear_target() {
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
}
inline const ::PClientStep_Vec2& PClientStep_Action::target() const {
  const ::PClientStep_Vec2* p = target_;
  // @@protoc_insertion_point(field_get:PClientStep.Action.Target)
  return p != NULL ? *p : *reinterpret_cast<const ::PClientStep_Vec2*>(
      &::_PClientStep_Vec2_default_instance_);
}
inline ::PClientStep_Vec2* PClientStep_Action::release_target() {
  // @@protoc_insertion_point(field_release:PClientStep.Action.Target)
  
  ::PClientStep_Vec2* temp = target_;
  target_ = NULL;
  return temp;
}
inline ::PClientStep_Vec2* PClientStep_Action::mutable_target() {
  
  if (target_ == NULL) {
    target_ = new ::PClientStep_Vec2;
  }
  // @@protoc_insertion_point(field_mutable:PClientStep.Action.Target)
  return target_;
}
inline void PClientStep_Action::set_allocated_target(::PClientStep_Vec2* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:PClientStep.Action.Target)
}

// -------------------------------------------------------------------

// PClientStep

// int32 StepIndex = 1;
inline void PClientStep::clear_stepindex() {
  stepindex_ = 0;
}
inline ::google::protobuf::int32 PClientStep::stepindex() const {
  // @@protoc_insertion_point(field_get:PClientStep.StepIndex)
  return stepindex_;
}
inline void PClientStep::set_stepindex(::google::protobuf::int32 value) {
  
  stepindex_ = value;
  // @@protoc_insertion_point(field_set:PClientStep.StepIndex)
}

// .PClientStep.Vec2 MoveInThisStep = 2;
inline bool PClientStep::has_moveinthisstep() const {
  return this != internal_default_instance() && moveinthisstep_ != NULL;
}
inline void PClientStep::clear_moveinthisstep() {
  if (GetArenaNoVirtual() == NULL && moveinthisstep_ != NULL) {
    delete moveinthisstep_;
  }
  moveinthisstep_ = NULL;
}
inline const ::PClientStep_Vec2& PClientStep::moveinthisstep() const {
  const ::PClientStep_Vec2* p = moveinthisstep_;
  // @@protoc_insertion_point(field_get:PClientStep.MoveInThisStep)
  return p != NULL ? *p : *reinterpret_cast<const ::PClientStep_Vec2*>(
      &::_PClientStep_Vec2_default_instance_);
}
inline ::PClientStep_Vec2* PClientStep::release_moveinthisstep() {
  // @@protoc_insertion_point(field_release:PClientStep.MoveInThisStep)
  
  ::PClientStep_Vec2* temp = moveinthisstep_;
  moveinthisstep_ = NULL;
  return temp;
}
inline ::PClientStep_Vec2* PClientStep::mutable_moveinthisstep() {
  
  if (moveinthisstep_ == NULL) {
    moveinthisstep_ = new ::PClientStep_Vec2;
  }
  // @@protoc_insertion_point(field_mutable:PClientStep.MoveInThisStep)
  return moveinthisstep_;
}
inline void PClientStep::set_allocated_moveinthisstep(::PClientStep_Vec2* moveinthisstep) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete moveinthisstep_;
  }
  if (moveinthisstep) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      moveinthisstep = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, moveinthisstep, submessage_arena);
    }
    
  } else {
    
  }
  moveinthisstep_ = moveinthisstep;
  // @@protoc_insertion_point(field_set_allocated:PClientStep.MoveInThisStep)
}

// .PClientStep.Vec2 TurnInThisStep = 3;
inline bool PClientStep::has_turninthisstep() const {
  return this != internal_default_instance() && turninthisstep_ != NULL;
}
inline void PClientStep::clear_turninthisstep() {
  if (GetArenaNoVirtual() == NULL && turninthisstep_ != NULL) {
    delete turninthisstep_;
  }
  turninthisstep_ = NULL;
}
inline const ::PClientStep_Vec2& PClientStep::turninthisstep() const {
  const ::PClientStep_Vec2* p = turninthisstep_;
  // @@protoc_insertion_point(field_get:PClientStep.TurnInThisStep)
  return p != NULL ? *p : *reinterpret_cast<const ::PClientStep_Vec2*>(
      &::_PClientStep_Vec2_default_instance_);
}
inline ::PClientStep_Vec2* PClientStep::release_turninthisstep() {
  // @@protoc_insertion_point(field_release:PClientStep.TurnInThisStep)
  
  ::PClientStep_Vec2* temp = turninthisstep_;
  turninthisstep_ = NULL;
  return temp;
}
inline ::PClientStep_Vec2* PClientStep::mutable_turninthisstep() {
  
  if (turninthisstep_ == NULL) {
    turninthisstep_ = new ::PClientStep_Vec2;
  }
  // @@protoc_insertion_point(field_mutable:PClientStep.TurnInThisStep)
  return turninthisstep_;
}
inline void PClientStep::set_allocated_turninthisstep(::PClientStep_Vec2* turninthisstep) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete turninthisstep_;
  }
  if (turninthisstep) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      turninthisstep = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, turninthisstep, submessage_arena);
    }
    
  } else {
    
  }
  turninthisstep_ = turninthisstep;
  // @@protoc_insertion_point(field_set_allocated:PClientStep.TurnInThisStep)
}

// repeated .PClientStep.Action ActionsInThisStep = 4;
inline int PClientStep::actionsinthisstep_size() const {
  return actionsinthisstep_.size();
}
inline void PClientStep::clear_actionsinthisstep() {
  actionsinthisstep_.Clear();
}
inline const ::PClientStep_Action& PClientStep::actionsinthisstep(int index) const {
  // @@protoc_insertion_point(field_get:PClientStep.ActionsInThisStep)
  return actionsinthisstep_.Get(index);
}
inline ::PClientStep_Action* PClientStep::mutable_actionsinthisstep(int index) {
  // @@protoc_insertion_point(field_mutable:PClientStep.ActionsInThisStep)
  return actionsinthisstep_.Mutable(index);
}
inline ::PClientStep_Action* PClientStep::add_actionsinthisstep() {
  // @@protoc_insertion_point(field_add:PClientStep.ActionsInThisStep)
  return actionsinthisstep_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PClientStep_Action >*
PClientStep::mutable_actionsinthisstep() {
  // @@protoc_insertion_point(field_mutable_list:PClientStep.ActionsInThisStep)
  return &actionsinthisstep_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PClientStep_Action >&
PClientStep::actionsinthisstep() const {
  // @@protoc_insertion_point(field_list:PClientStep.ActionsInThisStep)
  return actionsinthisstep_;
}

// float LastHealthInThisStep = 5;
inline void PClientStep::clear_lasthealthinthisstep() {
  lasthealthinthisstep_ = 0;
}
inline float PClientStep::lasthealthinthisstep() const {
  // @@protoc_insertion_point(field_get:PClientStep.LastHealthInThisStep)
  return lasthealthinthisstep_;
}
inline void PClientStep::set_lasthealthinthisstep(float value) {
  
  lasthealthinthisstep_ = value;
  // @@protoc_insertion_point(field_set:PClientStep.LastHealthInThisStep)
}

// -------------------------------------------------------------------

// PServerStep_Client

// int32 PlayerID = 1;
inline void PServerStep_Client::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 PServerStep_Client::playerid() const {
  // @@protoc_insertion_point(field_get:PServerStep.Client.PlayerID)
  return playerid_;
}
inline void PServerStep_Client::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PServerStep.Client.PlayerID)
}

// int32 IsEmpty = 2;
inline void PServerStep_Client::clear_isempty() {
  isempty_ = 0;
}
inline ::google::protobuf::int32 PServerStep_Client::isempty() const {
  // @@protoc_insertion_point(field_get:PServerStep.Client.IsEmpty)
  return isempty_;
}
inline void PServerStep_Client::set_isempty(::google::protobuf::int32 value) {
  
  isempty_ = value;
  // @@protoc_insertion_point(field_set:PServerStep.Client.IsEmpty)
}

// .PClientStep Step = 3;
inline bool PServerStep_Client::has_step() const {
  return this != internal_default_instance() && step_ != NULL;
}
inline void PServerStep_Client::clear_step() {
  if (GetArenaNoVirtual() == NULL && step_ != NULL) {
    delete step_;
  }
  step_ = NULL;
}
inline const ::PClientStep& PServerStep_Client::step() const {
  const ::PClientStep* p = step_;
  // @@protoc_insertion_point(field_get:PServerStep.Client.Step)
  return p != NULL ? *p : *reinterpret_cast<const ::PClientStep*>(
      &::_PClientStep_default_instance_);
}
inline ::PClientStep* PServerStep_Client::release_step() {
  // @@protoc_insertion_point(field_release:PServerStep.Client.Step)
  
  ::PClientStep* temp = step_;
  step_ = NULL;
  return temp;
}
inline ::PClientStep* PServerStep_Client::mutable_step() {
  
  if (step_ == NULL) {
    step_ = new ::PClientStep;
  }
  // @@protoc_insertion_point(field_mutable:PServerStep.Client.Step)
  return step_;
}
inline void PServerStep_Client::set_allocated_step(::PClientStep* step) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete step_;
  }
  if (step) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      step = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, step, submessage_arena);
    }
    
  } else {
    
  }
  step_ = step;
  // @@protoc_insertion_point(field_set_allocated:PServerStep.Client.Step)
}

// -------------------------------------------------------------------

// PServerStep

// int32 StepIndex = 1;
inline void PServerStep::clear_stepindex() {
  stepindex_ = 0;
}
inline ::google::protobuf::int32 PServerStep::stepindex() const {
  // @@protoc_insertion_point(field_get:PServerStep.StepIndex)
  return stepindex_;
}
inline void PServerStep::set_stepindex(::google::protobuf::int32 value) {
  
  stepindex_ = value;
  // @@protoc_insertion_point(field_set:PServerStep.StepIndex)
}

// repeated .PServerStep.Client AllClients = 2;
inline int PServerStep::allclients_size() const {
  return allclients_.size();
}
inline void PServerStep::clear_allclients() {
  allclients_.Clear();
}
inline const ::PServerStep_Client& PServerStep::allclients(int index) const {
  // @@protoc_insertion_point(field_get:PServerStep.AllClients)
  return allclients_.Get(index);
}
inline ::PServerStep_Client* PServerStep::mutable_allclients(int index) {
  // @@protoc_insertion_point(field_mutable:PServerStep.AllClients)
  return allclients_.Mutable(index);
}
inline ::PServerStep_Client* PServerStep::add_allclients() {
  // @@protoc_insertion_point(field_add:PServerStep.AllClients)
  return allclients_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PServerStep_Client >*
PServerStep::mutable_allclients() {
  // @@protoc_insertion_point(field_mutable_list:PServerStep.AllClients)
  return &allclients_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PServerStep_Client >&
PServerStep::allclients() const {
  // @@protoc_insertion_point(field_list:PServerStep.AllClients)
  return allclients_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessage_2eproto__INCLUDED
